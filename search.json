[{"path":"https://earamendia.github.io/EROITools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 EROITools authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://earamendia.github.io/EROITools/articles/Aggregating.html","id":"primary-and-final-stage-aggregations","dir":"Articles","previous_headings":"Domestic perspective","what":"Primary and final stage aggregations","title":"Aggregating EROIs by fossil fuel group","text":"Primary stage EROIs can simply aggregated aggregate_primary_stage_erois. function calculates, fossil fuel group (fossil fuels, coal products, natural gas, oil gas products, oil products), shares product primary extraction phase (tidy_AB_dta passed argument). , EROIs computed calculating weighted average EROIs. , country , share coal group “Coal products” one, aggregated EROI “Coal products” equal one coal. Likewise, aggregated final stage EROIs calculated aggregate_final_stage_erois. function calculates, fossil fuel group, shares product final use given country. different final energy carriers: electricity, heat, fuel, carriers together. , aggregated final stage EROIs calculated according shares.","code":"# Aggregating primary stage EROIs: aggregated_primary_stage_erois <- aggregate_primary_stage_erois(     .tidy_erois_df = tidy_AB_erois_dta,     .tidy_iea_df = tidy_AB_dta,     eroi_calc_method = \"dta\"   ) %>%    dplyr::glimpse() #> Rows: 12 #> Columns: 11 #> Groups: Country, Method, Energy.type, Last.stage, Year, Eroi.method, Type, Boundary, Product.Group [12] #> $ Country       <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"… #> $ Method        <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", … #> $ Energy.type   <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"… #> $ Last.stage    <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year          <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 20… #> $ Eroi.method   <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", … #> $ Type          <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"N… #> $ Boundary      <chr> \"All\", \"All\", \"All\", \"Feedstock\", \"Feedstock\", \"Feedstoc… #> $ Product.Group <chr> \"All fossil fuels\", \"Coal products\", \"Oil and gas produc… #> $ Energy.stage  <chr> \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"… #> $ Group.eroi    <dbl> 40.52669, 91.08310, 33.21149, 42.90249, 100.00000, 34.97… # Aggregating final stage EROIs: aggregated_final_stage_erois <- aggregate_final_stage_erois(     .tidy_erois_df = tidy_AB_erois_dta,     .tidy_iea_df = tidy_AB_dta,     eroi_calc_method = \"dta\"   ) %>%    dplyr::glimpse() #> Rows: 80 #> Columns: 12 #> Groups: Country, Method, Energy.type, Last.stage, Year, Eroi.method, Type, Boundary, Non_Energy_Uses, Product.Group [40] #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Non_Energy_Uses <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exclu… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"Coal products… #> $ Energy.stage    <chr> \"Final (fuel)\", \"Final (fuel+elec+heat)\", \"Final (fuel… #> $ Group.eroi      <dbl> 8.887669, 8.887669, 5.514706, 5.514706, 31.805135, 31.…"},{"path":"https://earamendia.github.io/EROITools/articles/Aggregating.html","id":"useful-stage-aggregations","dir":"Articles","previous_headings":"Domestic perspective","what":"Useful stage aggregations","title":"Aggregating EROIs by fossil fuel group","text":"Aggregating EROIs useful stage energy use requires analyst provide average final--useful energy efficiencies energy product used, country. Indeed, Recca package used calculate EROIs used data frame describing Energy Conversion Chain final energy stage, EROIs can calculated products corresponding primary extraction final energy stages. Alternatively, Recca package also used calculate useful stage EROIs, matrices used describe Energy Conversion Chain useful energy stage, require preliminary work analyst anyway. see example Physical Supply Use Table Input-Output matrices can used describe Energy Conversion Chain useful energy stage, see Heun, Owen, Brockway (2018). , create artificial ad-hoc data frame containing made-final--useful efficiencies demonstrate package. analyst provide final--useful efficiencies format similar tidy_FU_efficiencies_dta data frame introduced . , can calculate useful stage EROIs product level using push_to_useful_erois : Finally, can aggregate useful stage EROIs similar way primary final stages using aggregate_useful_stage_erois function. function also uses final use shares product within fossil fuel group, aggregate_final_stage_erois function.","code":"# Aggregating final stage EROIs: # Pushing to tidy useful stage EROIs length_to_use <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow()  tidy_FU_efficiencies_dta <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   dplyr::mutate(     Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))   ) %>%    dplyr::glimpse() #> Rows: 18 #> Columns: 6 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"B… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Product                <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking … #> $ Average_Efficiency_Col <dbl> 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50,… # Binding efficiencies to Input-Output EROIs tidy_useful_erois_dta <- push_to_useful_erois(     .tidy_io_erois = tidy_AB_erois_dta,     tidy_FU_efficiencies = tidy_FU_efficiencies_dta,     eroi_calc_method = \"dta\"   ) %>%   dplyr::glimpse() #> Rows: 72 #> Columns: 12 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Eroi.method            <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type                   <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"G… #> $ Boundary               <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Product                <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking … #> $ EROI                   <dbl> 5.185227, 7.239824, 91.083095, 33.935281, 26.36… #> $ Average_Efficiency_Col <dbl> 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50,… #> $ Useful_Stage_EROI      <dbl> 0.7777841, 1.4479647, 22.7707738, 10.1805843, 9…   #dplyr::filter(! is.na(Useful_Stage_EROI)) # Aggregating final stage EROIs: useful_stage_erois <- aggregate_useful_stage_erois(   .tidy_erois_df = tidy_useful_erois_dta,   .tidy_iea_df = tidy_AB_dta,   eroi_calc_method = \"dta\" ) %>%    dplyr::glimpse() #> Rows: 80 #> Columns: 12 #> Groups: Country, Method, Energy.type, Last.stage, Year, Eroi.method, Type, Boundary, Non_Energy_Uses, Product.Group [40] #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Non_Energy_Uses <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exclu… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"Coal products… #> $ Energy.stage    <chr> \"Useful (fuel)\", \"Useful (fuel+elec+heat)\", \"Useful (f… #> $ Group.eroi      <dbl> 2.7410808, 2.7410808, 0.8617539, 0.8617539, 17.4928241…"},{"path":[]},{"path":"https://earamendia.github.io/EROITools/articles/Aggregating.html","id":"primary-and-final-stage-aggregations-1","dir":"Articles","previous_headings":"Multi-regional perspective","what":"Primary and final stage aggregations","title":"Aggregating EROIs by fossil fuel group","text":"perform aggregations using multi-regional perspective, tidy data frame describing Energy Conversion Chain needs adapted first, country location flow added country column, removed flow column. step important allow function calculate share supply (primary stage) use (final useful stages) country. prepare_gma_for_shares function used effect. Note difference previous data frame (Country Flow): aggregation simply conducted : likewise, final stage, : Note product specified location production Multi-Regional version framework. implication final useful stage, aggregating EROIs, use shares product determined products specific region production. aggregations conduct final useful stage based consumption mix country, production mix (conversely primary stage, aggregations make sense based production mix).","code":"# Aggregating final stage EROIs: tidy_AB_data_gma_prepared <- tidy_AB_data_gma %>%   prepare_gma_for_shares() %>%    dplyr::glimpse() #> Rows: 94 #> Columns: 13 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Ledger.side            <chr> \"Supply\", \"Supply\", \"Supply\", \"Supply\", \"Supply… #> $ Flow.aggregation.point <chr> \"Total primary energy supply\", \"Total primary e… #> $ Flow                   <chr> \"Resources [of Coking coal]\", \"Resources [of Cr… #> $ Product                <chr> \"{A}_Coking coal [from Resources]\", \"{A}_Crude … #> $ Unit                   <chr> \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\",… #> $ E.dot                  <dbl> 5000, 8500, 4000, 850, 5000, 400, 3200, 200, 85… #> $ matnames               <chr> \"R\", \"R\", \"R\", \"V\", \"V\", \"V\", \"V\", \"V\", \"V\", \"V… #> $ product_without_origin <chr> \"Coking coal [from Resources]\", \"Crude oil [fro… # Aggregating final stage EROIs: dplyr::glimpse(tidy_AB_data_gma) #> Rows: 94 #> Columns: 12 #> $ Country                <chr> \"World\", \"World\", \"World\", \"World\", \"World\", \"W… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Ledger.side            <chr> \"Supply\", \"Supply\", \"Supply\", \"Supply\", \"Supply… #> $ Flow.aggregation.point <chr> \"Total primary energy supply\", \"Total primary e… #> $ Flow                   <chr> \"{A}_Resources [of Coking coal]\", \"{A}_Resource… #> $ Product                <chr> \"{A}_Coking coal [from Resources]\", \"{A}_Crude … #> $ Unit                   <chr> \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\",… #> $ E.dot                  <dbl> 5000, 8500, 4000, 850, 5000, 400, 3200, 200, 85… #> $ matnames               <chr> \"R\", \"R\", \"R\", \"V\", \"V\", \"V\", \"V\", \"V\", \"V\", \"V… # Aggregating final stage EROIs: aggregated_primary_stage_erois_gma <- aggregate_primary_stage_erois(     .tidy_erois_df = tidy_AB_erois_gma,     .tidy_iea_df = tidy_AB_data_gma_prepared,     eroi_calc_method = \"gma\"   ) %>%    dplyr::glimpse() #> Rows: 12 #> Columns: 11 #> Groups: Country, Method, Energy.type, Last.stage, Year, Eroi.method, Type, Boundary, Product.Group [12] #> $ Country       <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"… #> $ Method        <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", … #> $ Energy.type   <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"… #> $ Last.stage    <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year          <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 20… #> $ Eroi.method   <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", … #> $ Type          <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"N… #> $ Boundary      <chr> \"All\", \"All\", \"All\", \"Feedstock\", \"Feedstock\", \"Feedstoc… #> $ Product.Group <chr> \"All fossil fuels\", \"Coal products\", \"Oil and gas produc… #> $ Energy.stage  <chr> \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"… #> $ Group.eroi    <dbl> 40.24781, 88.47164, 33.09035, 42.90249, 100.00000, 34.97… # Aggregating final stage EROIs: aggregated_final_stage_erois_gma <- aggregate_final_stage_erois(     .tidy_erois_df = tidy_AB_erois_gma,     .tidy_iea_df = tidy_AB_data_gma_prepared,     eroi_calc_method = \"gma\"   ) %>%    dplyr::glimpse() #> Rows: 80 #> Columns: 12 #> Groups: Country, Method, Energy.type, Last.stage, Year, Eroi.method, Type, Boundary, Non_Energy_Uses, Product.Group [40] #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Non_Energy_Uses <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exclu… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"Coal products… #> $ Energy.stage    <chr> \"Final (fuel)\", \"Final (fuel+elec+heat)\", \"Final (fuel… #> $ Group.eroi      <dbl> 7.228293, 7.228293, 2.982800, 2.982800, 31.692055, 31.…"},{"path":"https://earamendia.github.io/EROITools/articles/Aggregating.html","id":"useful-stage-aggregations-1","dir":"Articles","previous_headings":"Multi-regional perspective","what":"Useful stage aggregations","title":"Aggregating EROIs by fossil fuel group","text":"demonstration domestic level, build made-data frame containing average final--useful efficiencies energy product expand EROI calculations useful stage energy product. , expand EROI calculations useful stage applying final--useful efficiencies energy product using push_to_useful_erois function: Last, can aggregate useful stage EROIs using aggregate_useful_stage_erois function:","code":"# Building a data frame containing average final-to-useful efficiencies for each energy product length_to_use <- tidy_AB_erois_gma %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow()  tidy_FU_efficiencies_gma <- tidy_AB_erois_gma %>%    dplyr::mutate(     Country = stringr::str_extract(Product, \"\\\\{.*\\\\}\") %>%        stringr::str_remove(\"\\\\{\") %>% stringr::str_remove(\"\\\\}\"),     Product = stringr::str_remove(Product, \"\\\\{.*\\\\}_\")   ) %>%    dplyr::select(Country, Method, Energy.type, Year, Product) %>%    dplyr::distinct() %>%    dplyr::mutate(     Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))   ) %>%    dplyr::glimpse() #> Rows: 15 #> Columns: 6 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"B… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Product                <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking … #> $ Average_Efficiency_Col <dbl> 0.1500000, 0.2107143, 0.2714286, 0.3321429, 0.3… # Pushing to tidy useful stage EROIs tidy_useful_erois_gma <- push_to_useful_erois(   .tidy_io_erois = tidy_AB_erois_gma,   tidy_FU_efficiencies = tidy_FU_efficiencies_gma,   eroi_calc_method = \"gma\" ) %>%    dplyr::glimpse() #> Rows: 108 #> Columns: 12 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Average_Efficiency_Col <dbl> 0.1500000, 0.1500000, 0.1500000, 0.1500000, 0.1… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Eroi.method            <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type                   <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Net\", \"Net… #> $ Boundary               <chr> \"All\", \"All\", \"Feedstock\", \"Feedstock\", \"All\", … #> $ Product                <chr> \"{A}_Blast furnace gas\", \"{B}_Blast furnace gas… #> $ EROI                   <dbl> 2.9003030, 1.4240609, 3.4010475, 1.6927454, 1.9… #> $ Useful_Stage_EROI      <dbl> 0.43504546, 0.21360914, 0.51015712, 0.25391181,… # Calculating aggregated useful stage EROIs: aggregated_useful_stage_erois <- aggregate_useful_stage_erois(   .tidy_erois_df = tidy_useful_erois_gma,   .tidy_iea_df = tidy_AB_data_gma_prepared,   eroi_calc_method = \"gma\" ) %>%    dplyr::glimpse() #> Rows: 72 #> Columns: 12 #> Groups: Country, Method, Energy.type, Last.stage, Year, Eroi.method, Type, Boundary, Non_Energy_Uses, Product.Group [36] #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Non_Energy_Uses <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exclu… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"Coal products… #> $ Energy.stage    <chr> \"Useful (fuel)\", \"Useful (fuel+elec+heat)\", \"Useful (f… #> $ Group.eroi      <dbl> 1.9917385, 1.9917385, 0.4730547, 0.4730547, 20.1470920…"},{"path":[]},{"path":"https://earamendia.github.io/EROITools/articles/Breakdown.html","id":"domestic-perspective","dir":"Articles","previous_headings":"","what":"Domestic perspective","title":"Breaking down useful stage EROIs by sector or end-use","text":"start constructing dummy final--useful efficiencies energy product similar way vignette demonstrating aggregation process: Now, supposing analyst access different final--useful efficiencies three different end-uses; “heating”, “mechanical work”, “end-uses”; let’s suppose final--useful efficiencies mechanical work half heating, end-uses third heating. can construct data frame end-use specific final--useful efficiencies follows: , can calculate useful stage EROIs product level using push_to_useful_erois, respect different end-uses. Note likewise, data frame containing final demand sector specific final--useful efficiencies conducted, final demand sector specific useful stage EROIs conducted. Last, note aggregate_useful_stage_erois function yet allow aggregate EROIs respecting breakdown. feature developed near future.","code":"# Constructing final-to-useful efficiencies data frame length_to_use <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow()  tidy_FU_efficiencies_dta <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   dplyr::mutate(     Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))   ) %>%    dplyr::glimpse() #> Rows: 18 #> Columns: 6 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"B… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Product                <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking … #> $ Average_Efficiency_Col <dbl> 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50,… # Making the data frame end-use specific tidy_FU_efficiencies_dta_end_uses <- tidy_FU_efficiencies_dta %>%    tidyr::expand_grid(End_Use = c(\"Heating\", \"Mechanical Work\", \"Other end-uses\")) %>%    dplyr::mutate(     Average_Efficiency_Col = dplyr::case_when(       Average_Efficiency_Col == \"Mechanical Work\" ~ Average_Efficiency_Col / 2,       Average_Efficiency_Col == \"Other end-uses\" ~ Average_Efficiency_Col / 3,       TRUE ~ Average_Efficiency_Col     )   ) %>%    dplyr::glimpse() #> Rows: 54 #> Columns: 7 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Product                <chr> \"Blast furnace gas\", \"Blast furnace gas\", \"Blas… #> $ Average_Efficiency_Col <dbl> 0.15, 0.15, 0.15, 0.20, 0.20, 0.20, 0.25, 0.25,… #> $ End_Use                <chr> \"Heating\", \"Mechanical Work\", \"Other end-uses\",… # Constructing useful stage EROIs data frame   tidy_useful_erois_dta_end_uses <- push_to_useful_erois(     .tidy_io_erois = tidy_AB_erois_dta,     tidy_FU_efficiencies = tidy_FU_efficiencies_dta_end_uses,     eroi_calc_method = \"dta\"   ) %>%    dplyr::glimpse() #> Rows: 216 #> Columns: 13 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Eroi.method            <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type                   <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"G… #> $ Boundary               <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Product                <chr> \"Blast furnace gas\", \"Blast furnace gas\", \"Blas… #> $ EROI                   <dbl> 5.185227, 5.185227, 5.185227, 7.239824, 7.23982… #> $ Average_Efficiency_Col <dbl> 0.15, 0.15, 0.15, 0.20, 0.20, 0.20, 0.25, 0.25,… #> $ End_Use                <chr> \"Heating\", \"Mechanical Work\", \"Other end-uses\",… #> $ Useful_Stage_EROI      <dbl> 0.7777841, 0.7777841, 0.7777841, 1.4479647, 1.4…"},{"path":"https://earamendia.github.io/EROITools/articles/Breakdown.html","id":"multi-regional-perspective","dir":"Articles","previous_headings":"","what":"Multi-regional perspective","title":"Breaking down useful stage EROIs by sector or end-use","text":"Similarly, construct data frame containing final--useful efficiencies. Next, make data frame end-use specific assuming specific final--useful efficiencies end-use: average efficiency mechanical work half one heating, one end-uses third one heating, energy products. Finally, construct useful stage EROIs data frame using push_to_useful_erois function.","code":"# Constructing final-to-useful efficiencies data frame length_to_use <- tidy_AB_erois_gma %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow()  tidy_FU_efficiencies_gma <- tidy_AB_erois_gma %>%   dplyr::mutate(     Country = stringr::str_extract(Product, \"\\\\{.*\\\\}\") %>%       stringr::str_remove(\"\\\\{\") %>% stringr::str_remove(\"\\\\}\"),     Product = stringr::str_remove(Product, \"\\\\{.*\\\\}_\")   ) %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   dplyr::mutate(     Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))   ) %>%   dplyr::glimpse() #> Rows: 15 #> Columns: 6 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"B… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Product                <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking … #> $ Average_Efficiency_Col <dbl> 0.1500000, 0.2107143, 0.2714286, 0.3321429, 0.3… # Making the data frame end-use specific tidy_FU_efficiencies_gma_end_uses <- tidy_FU_efficiencies_gma %>%   tidyr::expand_grid(End_Use = c(\"Heating\", \"Mechanical Work\", \"Other end-uses\")) %>%   dplyr::mutate(     Average_Efficiency_Col = dplyr::case_when(       Average_Efficiency_Col == \"Mechanical Work\" ~ Average_Efficiency_Col / 2,       Average_Efficiency_Col == \"Other end-uses\" ~ Average_Efficiency_Col / 3,       TRUE ~ Average_Efficiency_Col     )   ) %>%   dplyr::glimpse() #> Rows: 45 #> Columns: 7 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Product                <chr> \"Blast furnace gas\", \"Blast furnace gas\", \"Blas… #> $ Average_Efficiency_Col <dbl> 0.1500000, 0.1500000, 0.1500000, 0.2107143, 0.2… #> $ End_Use                <chr> \"Heating\", \"Mechanical Work\", \"Other end-uses\",… # Constructing useful stage EROIs data frame tidy_useful_erois_gma_end_uses <- push_to_useful_erois(   .tidy_io_erois = tidy_AB_erois_gma,   tidy_FU_efficiencies = tidy_FU_efficiencies_gma_end_uses,   eroi_calc_method = \"gma\"   ) %>%   dplyr::glimpse() #> Rows: 324 #> Columns: 13 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Average_Efficiency_Col <dbl> 0.1500000, 0.1500000, 0.1500000, 0.1500000, 0.1… #> $ End_Use                <chr> \"Heating\", \"Heating\", \"Heating\", \"Heating\", \"He… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Eroi.method            <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type                   <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Net\", \"Net… #> $ Boundary               <chr> \"All\", \"All\", \"Feedstock\", \"Feedstock\", \"All\", … #> $ Product                <chr> \"{A}_Blast furnace gas\", \"{B}_Blast furnace gas… #> $ EROI                   <dbl> 2.9003030, 1.4240609, 3.4010475, 1.6927454, 1.9… #> $ Useful_Stage_EROI      <dbl> 0.43504546, 0.21360914, 0.51015712, 0.25391181,…"},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"EROITools","text":"R package EROITools provides tools aggregate Energy Return Investment (EROI) values previously calculated using Physical Supply Use Table (PSUT) framework represent Energy Conversion Chain (see Heun, Owen, Brockway (2018)). Previous using EROITools package, World Energy Extended Balances (WEEB) International Energy Agency (IEA) can loaded tidied using IEATools ECCTools R packages. Recca R package allows analysts calculate wide range EROIs product industry levels, EROITools package provides tools aggregate calculated EROIs product group. Important features EROITools package include following: Aggregations can performed either global national level; Aggregations can performed primary final stage energy use, also useful stage energy use providing final--useful efficiencies provided analyst energy product; useful stage, package also allows analysts conduct aggregations respecting sectoral end-use breakdowns, average useful stage EROI product group can calculated given final demand sector (instance steelmaking) given end-use category (instance high temperature heating); Last, package allows analysts add additional energy requirements (supposing provided analyst) quantified using IEA’s WEEB supply chain energy requirements — see Brockway et al. (2019) Brand-Correa et al. (2017) examples quantification indirect energy flows.","code":""},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"available-vignettes","dir":"Articles","previous_headings":"","what":"Available vignettes","title":"EROITools","text":"vignettes available package detail conduct following tasks: Aggregating EROIs fossil fuel group: Shows EROIs can aggregated fossil fuel group primary, final, useful energy stages. product-level EROIs need calculated extracted first described subsequent example section. Breaking useful stage EROIs sector end-use: Shows calculate useful stage EROIs respecting breakdown either final demand sector end-use category. Adding indirect energy requirements: Shows indirect energy requirements can added EROI calculations.","code":""},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"example-for-vignettes-the-ab-world","dir":"Articles","previous_headings":"","what":"Example for vignettes: the AB world","title":"EROITools","text":"use example one used describe ECCTools package: welcome back fictitious AB world (consisting country country B)!","code":""},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"country-a","dir":"Articles","previous_headings":"Example for vignettes: the AB world","what":"Country A","title":"EROITools","text":"Energy Conversion Chain country shown figure :","code":""},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"country-b","dir":"Articles","previous_headings":"Example for vignettes: the AB world","what":"Country B","title":"EROITools","text":"Next figure shows Energy Conversion Chain country B.","code":""},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"tidy-ab-data","dir":"Articles","previous_headings":"Example for vignettes: the AB world","what":"Tidy AB data","title":"EROITools","text":"Let’s now look AB data organised .tidy_iea_df provided ECCTools package.","code":"# Fix product-level balances within each country ECCTools::tidy_AB_data %>%    dplyr::glimpse() #> Rows: 102 #> Columns: 11 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Ledger.side            <chr> \"Consumption\", \"Consumption\", \"Consumption\", \"C… #> $ Flow.aggregation.point <chr> \"Industry\", \"Industry\", \"Industry\", \"Industry\",… #> $ Flow                   <chr> \"Iron and steel\", \"Iron and steel\", \"Iron and s… #> $ Product                <chr> \"Blast furnace gas\", \"Electricity\", \"Heat\", \"Ke… #> $ Unit                   <chr> \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\",… #> $ E.dot                  <dbl> 500, 2920, 50, 1750, 500, 365, 200, 120, 700, 2…"},{"path":[]},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"domestic-technology-assumption","dir":"Articles","previous_headings":"Example for vignettes: the AB world > Calculation of product-level EROIs","what":"Domestic Technology Assumption","title":"EROITools","text":"Let us first modify Energy Conversion Chain make compliant Domestic Technology Assumption (see vignettes ECCTools package information — basic idea avoid taking consideration imports supply mix given country). , construct Input-Output matrices needed conduct calculations. , calculate product-level EROIs matrix format. Last, can drop matrix format extract product-level EROIs tidy data frame format.","code":"# Transforming Energy Conversion Chain to Domestic Technology Assumption tidy_AB_dta <- ECCTools::tidy_AB_data %>%   IEATools::add_psut_matnames() %>%    ECCTools::transform_to_dta(requirement_matrices_list = c(\"U_feed\"),                                select_dta_observations = FALSE) %>%    dplyr::glimpse() #> Rows: 102 #> Columns: 12 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Ledger.side            <chr> \"Consumption\", \"Consumption\", \"Consumption\", \"C… #> $ Flow.aggregation.point <chr> \"Industry\", \"Industry\", \"Industry\", \"Industry\",… #> $ Flow                   <chr> \"Iron and steel\", \"Iron and steel\", \"Iron and s… #> $ Product                <chr> \"Blast furnace gas\", \"Electricity\", \"Heat\", \"Ke… #> $ Unit                   <chr> \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\",… #> $ E.dot                  <dbl> 500, 2920, 50, 1750, 500, 365, 200, 120, 700, 2… #> $ matnames               <chr> \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y\", \"Y… # Calculating associated Input-Output matrices tidy_io_AB_dta <- tidy_AB_dta %>%   IEATools::prep_psut() %>%   Recca::calc_io_mats(method_q_calculation = \"sum_R_V_cols\") %>%    dplyr::glimpse() #> Rows: 2 #> Columns: 34 #> $ Country     <chr> \"A\", \"B\" #> $ Method      <chr> \"PCM\", \"PCM\" #> $ Energy.type <chr> \"E\", \"E\" #> $ Last.stage  <chr> \"Final\", \"Final\" #> $ Year        <dbl> 2018, 2018 #> $ B           <list> <matrix[1 x 1]>, <<matrix[3 x 3]>> #> $ Y           <list> <<matrix[9 x 6]>>, <<matrix[7 x 4]>> #> $ S_units     <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ R           <list> <<matrix[3 x 3]>>, <<matrix[1 x 7]>> #> $ U           <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ U_feed      <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ U_EIOU      <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ r_EIOU      <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ V           <list> <<matrix[7 x 9]>>, <<matrix[4 x 6]>> #> $ y           <list> <<matrix[9 x 1]>>, <<matrix[7 x 1]>> #> $ q           <list> <<matrix[12 x 1]>>, <<matrix[7 x 1]>> #> $ f           <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ g           <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ h           <list> <<matrix[3 x 1]>>, <<matrix[7 x 1]>> #> $ r           <list> <<matrix[3 x 1]>>, <matrix[1 x 1]> #> $ W           <list> <<matrix[12 x 7]>>, <<matrix[9 x 4]>> #> $ Z           <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ K           <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ C           <list> <<matrix[9 x 7]>>, <<matrix[6 x 4]>> #> $ D           <list> <<matrix[7 x 12]>>, <<matrix[4 x 7]>> #> $ A           <list> <<matrix[11 x 12]>>, <<matrix[8 x 7]>> #> $ O           <list> <<matrix[3 x 3]>>, <<matrix[1 x 7]>> #> $ L_pxp       <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp       <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ Z_feed      <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ K_feed      <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ A_feed      <list> <<matrix[9 x 12]>>, <<matrix[5 x 7]>> #> $ L_pxp_feed  <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp_feed  <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> # Calculating EROI vectors (matrix format) tidy_AB_erois_matrices_dta <- tidy_io_AB_dta %>%   Recca::calc_E_EIOU() %>%   Recca::calc_erois() %>%    dplyr::glimpse() #> Rows: 2 #> Columns: 40 #> $ Country       <chr> \"A\", \"B\" #> $ Method        <chr> \"PCM\", \"PCM\" #> $ Energy.type   <chr> \"E\", \"E\" #> $ Last.stage    <chr> \"Final\", \"Final\" #> $ Year          <dbl> 2018, 2018 #> $ B             <list> <matrix[1 x 1]>, <<matrix[3 x 3]>> #> $ Y             <list> <<matrix[9 x 6]>>, <<matrix[7 x 4]>> #> $ S_units       <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ R             <list> <<matrix[3 x 3]>>, <<matrix[1 x 7]>> #> $ U             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ U_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ U_EIOU        <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ r_EIOU        <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ V             <list> <<matrix[7 x 9]>>, <<matrix[4 x 6]>> #> $ y             <list> <<matrix[9 x 1]>>, <<matrix[7 x 1]>> #> $ q             <list> <<matrix[12 x 1]>>, <<matrix[7 x 1]>> #> $ f             <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ g             <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ h             <list> <<matrix[3 x 1]>>, <<matrix[7 x 1]>> #> $ r             <list> <<matrix[3 x 1]>>, <matrix[1 x 1]> #> $ W             <list> <<matrix[12 x 7]>>, <<matrix[9 x 4]>> #> $ Z             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ K             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ C             <list> <<matrix[9 x 7]>>, <<matrix[6 x 4]>> #> $ D             <list> <<matrix[7 x 12]>>, <<matrix[4 x 7]>> #> $ A             <list> <<matrix[11 x 12]>>, <<matrix[8 x 7]>> #> $ O             <list> <<matrix[3 x 3]>>, <<matrix[1 x 7]>> #> $ L_pxp         <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp         <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ Z_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ K_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ A_feed        <list> <<matrix[9 x 12]>>, <<matrix[5 x 7]>> #> $ L_pxp_feed    <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp_feed    <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ E_EIOU        <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ e_EIOU        <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ eroi_g_p      <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ eroi_g_i      <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ eroi_g_p_feed <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ eroi_g_i_feed <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> # Extracting EROI values to a tidy data frame format tidy_AB_erois_dta <- tidy_AB_erois_matrices_dta %>%   EROITools::extract_tidy_product_erois() %>%   dplyr::mutate(     Eroi.method = \"DTA\"   ) %>%   dplyr::relocate(tidyselect::all_of(\"Eroi.method\"), .after = Year) %>%   dplyr::glimpse() #> Rows: 36 #> Columns: 10 #> $ Country     <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\"… #> $ Method      <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"P… #> $ Energy.type <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\"… #> $ Last.stage  <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Fin… #> $ Year        <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018… #> $ Eroi.method <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"D… #> $ Type        <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gro… #> $ Boundary    <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"A… #> $ Product     <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking coal\", \"Cru… #> $ EROI        <dbl> 5.185227, 7.239824, 91.083095, 33.935281, 26.362358, 19.07…"},{"path":"https://earamendia.github.io/EROITools/articles/EROITools.html","id":"global-market-assumption","dir":"Articles","previous_headings":"Example for vignettes: the AB world > Calculation of product-level EROIs","what":"Global Market Assumption","title":"EROITools","text":"Alternatively, can modify Energy Conversion Chain describe energy flows across countries using Multi-Regional Physical Supply Use Table framework (see Aramendia et al. (2022)). sake simplicity, use Global Market Assumption demonstrate calculations multi-regional framework. , construct Input-Output matrices needed conduct calculations. , calculate product-level EROIs matric format. Last, can drop matrix format extract product-level EROIs tidy data frame format. can seen Global Market Assumption, one region (“World”), EROI product specified function region production (consumption!) product — information contained product name (“Product” column). rest vignettes demonstrate EROITools package based tidy_AB_erois_dta tidy_AB_erois_gma data frames.","code":"# Transforming Energy Conversion Chain to Global Market Assumption tidy_AB_data_gma <- ECCTools::tidy_AB_data %>%   IEATools::add_psut_matnames() %>%   ECCTools::transform_to_gma() %>%   dplyr::glimpse() #> Rows: 101 #> Columns: 12 #> $ Country                <chr> \"World\", \"World\", \"World\", \"World\", \"World\", \"W… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Ledger.side            <chr> \"Supply\", \"Supply\", \"Supply\", \"Supply\", \"Supply… #> $ Flow.aggregation.point <chr> \"Total primary energy supply\", \"Total primary e… #> $ Flow                   <chr> \"{A}_Resources [of Coking coal]\", \"{A}_Resource… #> $ Product                <chr> \"{A}_Coking coal [from Resources]\", \"{A}_Crude … #> $ Unit                   <chr> \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\", \"ktoe\",… #> $ E.dot                  <dbl> 5000, 8500, 4000, 600, 2000, 3000, 2500, 850, 5… #> $ matnames               <chr> \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"R\", \"V\", \"V\", \"V… # Calculating associated Input-Output matrices tidy_io_AB_gma <- tidy_AB_data_gma %>%   IEATools::prep_psut() %>%   Recca::calc_io_mats(method_q_calculation = \"sum_R_V_cols\") %>%    dplyr::glimpse() #> Rows: 1 #> Columns: 33 #> $ Country     <chr> \"World\" #> $ Method      <chr> \"PCM\" #> $ Energy.type <chr> \"E\" #> $ Last.stage  <chr> \"Final\" #> $ Year        <dbl> 2018 #> $ Y           <list> <<matrix[13 x 6]>> #> $ S_units     <list> <<matrix[21 x 1]>> #> $ R           <list> <<matrix[7 x 7]>> #> $ U           <list> <<matrix[16 x 11]>> #> $ U_feed      <list> <<matrix[11 x 11]>> #> $ U_EIOU      <list> <<matrix[9 x 11]>> #> $ r_EIOU      <list> <<matrix[16 x 11]>> #> $ V           <list> <<matrix[11 x 15]>> #> $ y           <list> <<matrix[13 x 1]>> #> $ q           <list> <<matrix[21 x 1]>> #> $ f           <list> <<matrix[11 x 1]>> #> $ g           <list> <<matrix[11 x 1]>> #> $ h           <list> <<matrix[7 x 1]>> #> $ r           <list> <<matrix[7 x 1]>> #> $ W           <list> <<matrix[18 x 11]>> #> $ Z           <list> <<matrix[16 x 11]>> #> $ K           <list> <<matrix[16 x 11]>> #> $ C           <list> <<matrix[15 x 11]>> #> $ D           <list> <<matrix[11 x 21]>> #> $ A           <list> <<matrix[16 x 21]>> #> $ O           <list> <<matrix[7 x 7]>> #> $ L_pxp       <list> <<matrix[21 x 21]>> #> $ L_ixp       <list> <<matrix[11 x 21]>> #> $ Z_feed      <list> <<matrix[11 x 11]>> #> $ K_feed      <list> <<matrix[11 x 11]>> #> $ A_feed      <list> <<matrix[11 x 21]>> #> $ L_pxp_feed  <list> <<matrix[21 x 21]>> #> $ L_ixp_feed  <list> <<matrix[11 x 21]>> # Calculating EROI vectors (matrix format) tidy_AB_erois_matrices_gma <- tidy_io_AB_gma %>%   Recca::calc_E_EIOU() %>%   Recca::calc_erois() %>%   dplyr::glimpse() #> Rows: 1 #> Columns: 39 #> $ Country       <chr> \"World\" #> $ Method        <chr> \"PCM\" #> $ Energy.type   <chr> \"E\" #> $ Last.stage    <chr> \"Final\" #> $ Year          <dbl> 2018 #> $ Y             <list> <<matrix[13 x 6]>> #> $ S_units       <list> <<matrix[21 x 1]>> #> $ R             <list> <<matrix[7 x 7]>> #> $ U             <list> <<matrix[16 x 11]>> #> $ U_feed        <list> <<matrix[11 x 11]>> #> $ U_EIOU        <list> <<matrix[9 x 11]>> #> $ r_EIOU        <list> <<matrix[16 x 11]>> #> $ V             <list> <<matrix[11 x 15]>> #> $ y             <list> <<matrix[13 x 1]>> #> $ q             <list> <<matrix[21 x 1]>> #> $ f             <list> <<matrix[11 x 1]>> #> $ g             <list> <<matrix[11 x 1]>> #> $ h             <list> <<matrix[7 x 1]>> #> $ r             <list> <<matrix[7 x 1]>> #> $ W             <list> <<matrix[18 x 11]>> #> $ Z             <list> <<matrix[16 x 11]>> #> $ K             <list> <<matrix[16 x 11]>> #> $ C             <list> <<matrix[15 x 11]>> #> $ D             <list> <<matrix[11 x 21]>> #> $ A             <list> <<matrix[16 x 21]>> #> $ O             <list> <<matrix[7 x 7]>> #> $ L_pxp         <list> <<matrix[21 x 21]>> #> $ L_ixp         <list> <<matrix[11 x 21]>> #> $ Z_feed        <list> <<matrix[11 x 11]>> #> $ K_feed        <list> <<matrix[11 x 11]>> #> $ A_feed        <list> <<matrix[11 x 21]>> #> $ L_pxp_feed    <list> <<matrix[21 x 21]>> #> $ L_ixp_feed    <list> <<matrix[11 x 21]>> #> $ E_EIOU        <list> <<matrix[9 x 11]>> #> $ e_EIOU        <list> <<matrix[11 x 1]>> #> $ eroi_g_p      <list> <<matrix[21 x 1]>> #> $ eroi_g_i      <list> <<matrix[11 x 1]>> #> $ eroi_g_p_feed <list> <<matrix[21 x 1]>> #> $ eroi_g_i_feed <list> <<matrix[11 x 1]>> # Extracting EROI values to a tidy data frame format tidy_AB_erois_gma <- tidy_AB_erois_matrices_gma %>%   EROITools::extract_tidy_product_erois() %>%   dplyr::mutate(     Eroi.method = \"GMA\"   ) %>%   dplyr::relocate(tidyselect::all_of(\"Eroi.method\"), .after = Year) %>%   dplyr::glimpse() #> Rows: 36 #> Columns: 10 #> $ Country     <chr> \"World\", \"World\", \"World\", \"World\", \"World\", \"World\", \"Wor… #> $ Method      <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"P… #> $ Energy.type <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\"… #> $ Last.stage  <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Fin… #> $ Year        <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018… #> $ Eroi.method <chr> \"GMA\", \"GMA\", \"GMA\", \"GMA\", \"GMA\", \"GMA\", \"GMA\", \"GMA\", \"G… #> $ Type        <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gro… #> $ Boundary    <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"A… #> $ Product     <chr> \"{A}_Blast furnace gas\", \"{A}_Coke oven coke\", \"{A}_Coking… #> $ EROI        <dbl> 3.231508, 16.660572, 89.065580, 33.838980, 24.019478, 18.0…"},{"path":[]},{"path":"https://earamendia.github.io/EROITools/articles/Indirect_Energy.html","id":"adding-indirect-energy-requirements","dir":"Articles","previous_headings":"","what":"Adding indirect energy requirements","title":"Adding indirect or other energy requirements","text":"start expanding product-level EROIs useful stage using made-final--useful efficiencies product, similar vein done vignettes. , aggregate primary, final, useful stage EROIs using functions package, bind results single data frame aggregated EROIs. Next, analyst needs provide data frame containing product, year, product group, energy stage (primary, final), indirect energy requirements quantified unit .tidy_iea_df used (tidy_AB_dta data frame). , make data demonstrate package structure input data frame analyst needs provide. , indirect energy requirements can easily added energy requirements product group using add_indirect_energy_to_erois function. Note, add_indirect_energy_to_erois adds indirect energy requirements calculating, product group, ratio indirect energy requirements energy output, : \\[r = \\frac{\\textrm{idE}}{e_{\\textrm{}}},\\] indirect energy requirements thus provided analyst, energy output product group however calculated internally function using data .tidy_iea_df passed argument. important note analyst can decide quantify energy products used non-energy products part energy output (leading lower ratio), exclude (leading higher ratio), using include_non_energy_uses argument — decision made basis whether energy use ascribed energy products used non-energy products . default, recommended include non-energy uses part output ensure consistency Physical Supply Use Table calculations, hence use TRUE value. inverse new EROI including indirect energy requirements calculated : \\[\\textrm{EROI}_{\\textrm{idE}}^{-1} = \\textrm{EROI}_{\\textrm{dE}}^{-1} + \\frac{\\textrm{idE}}{e_{\\textrm{}}},\\] taking inverse yields EROI including indirect energy requirements.","code":"# Constructing final-to-useful efficiencies data frame # Pushing to tidy useful stage EROIs: length_to_use <- tidy_AB_erois_dta %>%    dplyr::select(Country, Method, Energy.type, Year, Product) %>%    dplyr::distinct() %>%    nrow()  tidy_FU_efficiencies_dta <- tidy_AB_erois_dta %>%    dplyr::select(Country, Method, Energy.type, Year, Product) %>%    dplyr::distinct() %>%    dplyr::mutate(     Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))   )  tidy_useful_erois_dta <- push_to_useful_erois(     .tidy_io_erois = tidy_AB_erois_dta,     tidy_FU_efficiencies = tidy_FU_efficiencies_dta,     eroi_calc_method = \"dta\"   ) %>%   dplyr::glimpse() #> Rows: 72 #> Columns: 12 #> $ Country                <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method                 <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type            <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage             <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"F… #> $ Year                   <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018,… #> $ Eroi.method            <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type                   <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"G… #> $ Boundary               <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Product                <chr> \"Blast furnace gas\", \"Coke oven coke\", \"Coking … #> $ EROI                   <dbl> 5.185227, 7.239824, 91.083095, 33.935281, 26.36… #> $ Average_Efficiency_Col <dbl> 0.15, 0.20, 0.25, 0.30, 0.35, 0.40, 0.45, 0.50,… #> $ Useful_Stage_EROI      <dbl> 0.7777841, 1.4479647, 22.7707738, 10.1805843, 9… # Primary stage EROIs: primary_erois <- aggregate_primary_stage_erois(   .tidy_erois_df = tidy_AB_erois_dta,   .tidy_iea_df = tidy_AB_dta,   eroi_calc_method = \"dta\" )  # Final stage EROIs: final_erois <- aggregate_final_stage_erois(   .tidy_erois_df = tidy_AB_erois_dta,   .tidy_iea_df = tidy_AB_dta,   eroi_calc_method = \"dta\" )  # Useful stage EROIs: useful_erois <- aggregate_useful_stage_erois(   .tidy_erois_df = tidy_useful_erois_dta,   .tidy_iea_df = tidy_AB_dta,   eroi_calc_method = \"dta\" )  # All EROIs in single data frame: all_aggregated_erois <- dplyr::bind_rows(   primary_erois,   final_erois,   useful_erois ) prepare_nrows_df <- all_aggregated_erois %>%   dplyr::filter(Energy.stage == \"Primary\" | stringr::str_detect(Energy.stage, \"Final\")) %>%   dplyr::mutate(     Energy.stage = dplyr::case_when(       stringr::str_detect(Energy.stage, \"Final\") ~ \"Final\",       TRUE ~ Energy.stage     )   ) %>%   dplyr::ungroup() %>%   dplyr::select(Country, Year, Product.Group, Energy.stage) %>%   dplyr::mutate(     Indirect_Energy = \"Included\"   ) %>%   dplyr::distinct() %>%   dplyr::glimpse() #> Rows: 13 #> Columns: 5 #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"B\",… #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Product.Group   <chr> \"All fossil fuels\", \"Coal products\", \"Oil and gas prod… #> $ Energy.stage    <chr> \"Primary\", \"Primary\", \"Primary\", \"Final\", \"Final\", \"Fi… #> $ Indirect_Energy <chr> \"Included\", \"Included\", \"Included\", \"Included\", \"Inclu…  n_rows <- prepare_nrows_df %>%   nrow()  idE_df <- prepare_nrows_df %>%   dplyr::mutate(     Indirect_Energy_ktoe = seq(0, 1000, 1000/(n_rows - 1))   ) %>%   dplyr::glimpse() #> Rows: 13 #> Columns: 6 #> $ Country              <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\",… #> $ Year                 <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2… #> $ Product.Group        <chr> \"All fossil fuels\", \"Coal products\", \"Oil and gas… #> $ Energy.stage         <chr> \"Primary\", \"Primary\", \"Primary\", \"Final\", \"Final\"… #> $ Indirect_Energy      <chr> \"Included\", \"Included\", \"Included\", \"Included\", \"… #> $ Indirect_Energy_ktoe <dbl> 0.00000, 83.33333, 166.66667, 250.00000, 333.3333… erois_with_idE <- add_indirect_energy_to_erois(   .tidy_summarised_erois_df = all_aggregated_erois,   .tidy_indirect_energy = idE_df,   .tidy_iea_df = tidy_AB_dta ) %>%   dplyr::glimpse() #> Rows: 504 #> Columns: 13 #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"Feedstock\",… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"Coal products… #> $ Energy.stage    <chr> \"Primary\", \"Primary\", \"Primary\", \"Primary\", \"Primary\",… #> $ Group.eroi      <dbl> 40.526689, 40.526689, 36.172053, 91.083095, 23.074664,… #> $ Non_Energy_Uses <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ Indirect_Energy <chr> \"Included\", \"Excluded\", \"Included\", \"Excluded\", \"Inclu…"},{"path":"https://earamendia.github.io/EROITools/articles/Indirect_Energy.html","id":"adding-a-sectoral-or-end-use-breakdown-at-the-useful-stage","dir":"Articles","previous_headings":"","what":"Adding a sectoral or end-use breakdown at the useful stage","title":"Adding indirect or other energy requirements","text":"indirect energy requirements added EROIs way respects given breakdown (final demand sector, end-use, etc.) useful stage, one use instead add_indirect_energy_useful_erois_by function. First, need define data frame containing useful stage EROIs different categories. sake example, suppose “Iron steel” highest EROIs, fuels used “Others” EROI half value, fuels used “Road transportation” third, “Agriculture” fourth, “Mining” fifth. need data frame containing EROIs final useful stage: , can prepare values indirect energy requirements product group: finally, useful stage EROIs including indirect energy requirements respecting breakdown category can determined using add_indirect_energy_useful_erois_by function :","code":"list_breakdown_categories <- c(\"Iron and steel\", \"Road transportation\", \"Agriculture\", \"Mining\", \"Others\")  # Useful stage EROIs: useful_stage_erois_by <- aggregate_useful_stage_erois(   .tidy_erois_df = tidy_useful_erois_dta,   .tidy_iea_df = tidy_AB_dta,   eroi_calc_method = \"dta\" ) %>%   tidyr::expand_grid(     Categories = list_breakdown_categories   ) %>%   dplyr::mutate(     Group.eroi = dplyr::case_when(       Categories == \"Others\" ~ Group.eroi/2,       Categories == \"Road transportation\" ~ Group.eroi/3,       Categories == \"Agriculture\" ~ Group.eroi/4,       Categories == \"Mining\" ~ Group.eroi/5,       TRUE ~ Group.eroi     )   ) %>%   dplyr::glimpse() #> Rows: 400 #> Columns: 13 #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Non_Energy_Uses <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exclu… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"All fossil fu… #> $ Energy.stage    <chr> \"Useful (fuel)\", \"Useful (fuel)\", \"Useful (fuel)\", \"Us… #> $ Group.eroi      <dbl> 2.7410808, 0.9136936, 0.6852702, 0.5482162, 1.3705404,… #> $ Categories      <chr> \"Iron and steel\", \"Road transportation\", \"Agriculture\"… # Final stage EROIs: final_erois <- aggregate_final_stage_erois(   .tidy_erois_df = tidy_AB_erois_dta,   .tidy_iea_df = tidy_AB_dta,   eroi_calc_method = \"dta\" ) %>%   tidyr::expand_grid(     Categories = list_breakdown_categories   )  final_useful_erois <- dplyr::bind_rows(   useful_stage_erois_by,   final_erois ) %>%    glimpse() #> Rows: 800 #> Columns: 13 #> $ Country         <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\",… #> $ Method          <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\"… #> $ Energy.type     <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\",… #> $ Last.stage      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", … #> $ Year            <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, … #> $ Eroi.method     <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\"… #> $ Type            <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", … #> $ Boundary        <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\"… #> $ Non_Energy_Uses <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exclu… #> $ Product.Group   <chr> \"All fossil fuels\", \"All fossil fuels\", \"All fossil fu… #> $ Energy.stage    <chr> \"Useful (fuel)\", \"Useful (fuel)\", \"Useful (fuel)\", \"Us… #> $ Group.eroi      <dbl> 2.7410808, 0.9136936, 0.6852702, 0.5482162, 1.3705404,… #> $ Categories      <chr> \"Iron and steel\", \"Road transportation\", \"Agriculture\"… prepare_idE_df <- final_erois %>%   dplyr::filter(stringr::str_detect(Energy.stage, \"Final\")) %>%   dplyr::mutate(     Energy.stage = dplyr::case_when(       stringr::str_detect(Energy.stage, \"Final\") ~ \"Final\",       TRUE ~ Energy.stage     )   ) %>%   dplyr::ungroup() %>%   dplyr::select(Country, Year, Product.Group, Energy.stage) %>%   dplyr::mutate(     Indirect_Energy = \"Included\"   ) %>%   dplyr::distinct()  n_rows <- prepare_idE_df %>%   nrow()  idE_by_category_df <- prepare_idE_df %>%   dplyr::mutate(     Indirect_Energy_ktoe = seq(0, 1000, 1000/(n_rows - 1))   ) %>%    glimpse() #> Rows: 10 #> Columns: 6 #> $ Country              <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"B\", \"B\", \"B\", \"B\", \"B\" #> $ Year                 <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2… #> $ Product.Group        <chr> \"All fossil fuels\", \"Coal products\", \"Natural gas… #> $ Energy.stage         <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Fin… #> $ Indirect_Energy      <chr> \"Included\", \"Included\", \"Included\", \"Included\", \"… #> $ Indirect_Energy_ktoe <dbl> 0.0000, 111.1111, 222.2222, 333.3333, 444.4444, 5… res_idE <- add_indirect_energy_useful_erois_by(   .tidy_aggregated_erois_by_df = final_useful_erois,   .tidy_indirect_energy = idE_by_category_df,   .tidy_iea_df = tidy_AB_dta,   aggregation_category = \"Categories\" ) %>%    glimpse() #> Rows: 1,200 #> Columns: 16 #> $ Country           <chr> \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A\", \"A… #> $ Method            <chr> \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PCM\", \"PC… #> $ Energy.type       <chr> \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E\", \"E… #> $ Last.stage.x      <chr> \"Final\", \"Final\", \"Final\", \"Final\", \"Final\", \"Final\"… #> $ Year              <dbl> 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018… #> $ Eroi.method       <chr> \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DTA\", \"DT… #> $ Type              <chr> \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\", \"Gross\"… #> $ Boundary          <chr> \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"All\", \"Al… #> $ Non_Energy_Uses.x <chr> \"Excluded\", \"Excluded\", \"Excluded\", \"Excluded\", \"Exc… #> $ Product.Group     <chr> \"All fossil fuels\", \"All fossil fuels\", \"All fossil … #> $ Energy.stage      <chr> \"Useful (fuel)\", \"Useful (fuel)\", \"Useful (fuel)\", \"… #> $ Group.eroi        <dbl> 2.7410808, 1.2271781, 2.7410808, 0.9136936, 0.409059… #> $ Categories        <chr> \"Iron and steel\", \"Iron and steel\", \"Iron and steel\"… #> $ Indirect_Energy   <chr> \"Included\", \"Included\", \"Excluded\", \"Included\", \"Inc… #> $ Last.stage.y      <chr> \"Final\", \"Final\", NA, \"Final\", \"Final\", NA, \"Final\",… #> $ Non_Energy_Uses.y <chr> \"Excluded\", \"Excluded\", NA, \"Excluded\", \"Excluded\", …"},{"path":"https://earamendia.github.io/EROITools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://earamendia.github.io/EROITools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Emmanuel Aramendia, Matthew K. Heun (2023). EROITools: Tools calculating aggregating Energy Return Investment values R package version 0.1.2.","code":"@Manual{,   title = {EROITools: Tools for calculating and aggregating Energy Return On Investment values},   author = {Emmanuel Aramendia and Matthew Kuperus Heun},   year = {2023},   note = {R package version 0.1.2.},   url = {https://github.com/earamendia/EROITools}, }"},{"path":"https://earamendia.github.io/EROITools/index.html","id":"eroitools","dir":"","previous_headings":"","what":"EROITools","title":"EROITools","text":"R package EROITools provides tools aggregate Energy Return Investment (EROI) values previously calculated using Physical Supply Use Table (PSUT) framework represent Energy Conversion Chain (see Heun, Owen, Brockway (2018)). Previous using EROITools package, World Energy Extended Balances (WEEB) International Energy Agency (IEA) can loaded tidied using IEATools ECCTools R packages. Recca R package allows analysts calculate wide range EROIs product industry levels, EROITools package provides tools aggregate calculated EROIs product group. Important features EROITools package include following: Aggregations can performed either global national level; Aggregations can performed primary final stage energy use, also useful stage energy use providing final--useful efficiencies provided analyst energy product; useful stage, package also allows analysts conduct aggregations respecting sectoral end-use breakdowns, average useful stage EROI product group can calculated given final demand sector (instance steelmaking) given end-use category (instance high temperature heating); Last, package allows analysts add additional energy requirements (supposing provided analyst) quantified using IEA’s WEEB supply chain energy requirements — see Brockway et al. (2019) Brand-Correa et al. (2017) examples quantification indirect energy flows.","code":""},{"path":"https://earamendia.github.io/EROITools/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"EROITools","text":"can install EROITools github :","code":"# install devtools if not already installed # install.packages(\"devtools\") devtools::install_github(\"earamendia/EROITools\") # To build vignettes locally, use devtools::install_github(\"earamendia/EROITools\", build_vignettes = TRUE)"},{"path":"https://earamendia.github.io/EROITools/index.html","id":"history","dir":"","previous_headings":"","what":"History","title":"EROITools","text":"package builds upon previous IEATools, Recca, ECCTools R packages demonstrated paper soon possible. calculations conducted within package heavily dependent Physical Supply Use Table framework introduced represent Energy Conversion Chain Heun, Owen, Brockway (2018) developed Aramendia et al. (2022).","code":""},{"path":"https://earamendia.github.io/EROITools/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"EROITools","text":"Find information, including vignettes function documentation, https://earamendia.github.io/EROITools/.","code":""},{"path":[]},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_to_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds indirect energy to the EROI values — add_indirect_energy_to_erois","title":"Adds indirect energy to the EROI values — add_indirect_energy_to_erois","text":"add indirect energy, function calculates ratio indirect energy output per product group global level (see details), adds energy inputs using inverse EROI. function uses ratio product group, independently whether energy stage electricity, heat, fuel, combination (apply different ratio primary, final useful stage though).","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_to_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds indirect energy to the EROI values — add_indirect_energy_to_erois","text":"","code":"add_indirect_energy_to_erois(   .tidy_summarised_erois_df,   .tidy_indirect_energy,   .tidy_iea_df,   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   e_dot = IEATools::iea_cols$e_dot,   unit = IEATools::iea_cols$unit,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   group.eroi = \"Group.eroi\",   total_group_output = \"Total_Group_Output\",   indirect_energy_ktoe = \"Indirect_Energy_ktoe\",   eroi.method = \"Eroi.method\",   type = \"Type\",   boundary = \"Boundary\",   final_to_useful_eff = \"Final_to_useful_efficiency\",   ratio_indirect_energy_per_output = \"ratio_indirect_energy_per_output\",   include_non_energy_uses = TRUE )"},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_to_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds indirect energy to the EROI values — add_indirect_energy_to_erois","text":".tidy_summarised_erois_df aggregated EROI values indirect energy needs added .tidy_indirect_energy tidy data frame containing indirect energy added, ktoe. .tidy_iea_df .tidy_iea_df output per product group calculated. country, year, method, energy_type, last_stage, e_dot, unit See IEATools::iea_cols. product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage calculation EROI. Default \"Energy.stage\". group.eroi name column containing EROI values. Default \"Group.eroi\". total_group_output name column containing total product group output. Default \"Total_Group_Output\". indirect_energy_ktoe name column containing indirect energy data input indirect energy data frame. Default \"Indirect_Energy_ktoe\". eroi.method name column containing eroi method. Default \"Eroi.method\". type name column containing type eroi calculated. Default \"Type\". boundary name column containing boundary eroi calculation. Default \"Boundary\". final_to_useful_eff name temporary column containing calculated final--useful efficiencies. Default \"Final_to_useful_efficiency\". ratio_indirect_energy_per_output name column containing ratio indirect energy product group output. Default \"ratio_indirect_energy_per_output\". include_non_energy_uses boolean stating whether non-energy uses included calculation output per product group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_to_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds indirect energy to the EROI values — add_indirect_energy_to_erois","text":"data frame containing EROIs indirect energy now included.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_to_erois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds indirect energy to the EROI values — add_indirect_energy_to_erois","text":".tidy_iea_data frame provided input representation global Energy Conversion Chain, ratio indirect energy output (primary final energy stages) calculated global level, output per fossil fuel group needs calculated global level.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_useful_erois_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Adds indirect energy to useful stage EROI values with given breakdown — add_indirect_energy_useful_erois_by","title":"Adds indirect energy to useful stage EROI values with given breakdown — add_indirect_energy_useful_erois_by","text":"add indirect energy, function calculates ratio indirect energy output per product group, adds energy inputs using inverse EROI. function starts calculating ratio indirect energy final energy output, uses average efficiency, either end-use final demand sector depending breakdown, determine ratio indirect energy input useful energy output. average efficiency determined ratio useful stage EROI final stage EROI.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_useful_erois_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adds indirect energy to useful stage EROI values with given breakdown — add_indirect_energy_useful_erois_by","text":"","code":"add_indirect_energy_useful_erois_by(   .tidy_aggregated_erois_by_df,   .tidy_indirect_energy,   .tidy_iea_df,   aggregation_category = \"EU_category\",   country = IEATools::iea_cols$country,   year = IEATools::iea_cols$year,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   e_dot = IEATools::iea_cols$e_dot,   unit = IEATools::iea_cols$unit,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   group.eroi = \"Group.eroi\",   total_group_output = \"Total_Group_Output\",   indirect_energy_ktoe = \"Indirect_Energy_ktoe\",   eroi.method = \"Eroi.method\",   type = \"Type\",   boundary = \"Boundary\",   final_to_useful_eff = \"Final_to_useful_efficiency\",   ratio_indirect_energy_per_output = \"ratio_indirect_energy_per_output\",   include_non_energy_uses = TRUE )"},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_useful_erois_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adds indirect energy to useful stage EROI values with given breakdown — add_indirect_energy_useful_erois_by","text":".tidy_aggregated_erois_by_df aggregated useful stage EROI values, breakdown, indirect energy needs added .tidy_indirect_energy tidy data frame containing indirect energy added, ktoe. .tidy_iea_df .tidy_iea_df output per product group calculated. aggregation_category name column standing breakdown EROIs. Default \"EU_category\". country, year, method, energy_type, last_stage, e_dot, unit See IEATools::iea_cols. product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage calculation EROI. Default \"Energy.stage\". group.eroi name column containing EROI values. Default \"Group.eroi\". total_group_output name column containing total product group output. Default \"Total_Group_Output\". indirect_energy_ktoe name column containing indirect energy data input indirect energy data frame. Default \"Indirect_Energy_ktoe\". eroi.method name column containing eroi method. Default \"Eroi.method\". type name column containing type eroi calculated. Default \"Type\". boundary name column containing boundary eroi calculation. Default \"Boundary\". final_to_useful_eff name temporary column containing calculated final--useful efficiencies. Default \"Final_to_useful_efficiency\". ratio_indirect_energy_per_output name column containing ratio indirect energy product group output. Default \"ratio_indirect_energy_per_output\". include_non_energy_uses boolean stating whether non-energy uses included calculation output per product group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_useful_erois_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adds indirect energy to useful stage EROI values with given breakdown — add_indirect_energy_useful_erois_by","text":"data frame containing EROIs considered breakdown, indirect energy now included.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/add_indirect_energy_useful_erois_by.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Adds indirect energy to useful stage EROI values with given breakdown — add_indirect_energy_useful_erois_by","text":".tidy_iea_df provided input representation global Energy Conversion Chain, ratio indirect energy output (primary final energy stages) calculated global level, output per fossil fuel group needs calculated global level.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_final_stage_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","title":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","text":"function calculates aggregated final stage EROIs fossil fuel group. determines shares uses energy product within fossil fuel group (default using Y U_eiou matrices), shares determines average final stage EROI fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_final_stage_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","text":"","code":"aggregate_final_stage_erois(   .tidy_erois_df,   .tidy_iea_df,   include_non_energy_uses = FALSE,   final_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   non_energy_uses = \"Non_Energy_Uses\",   eroi.method = \"Eroi.method\",   type = \"Type\",   boundary = \"Boundary\",   share = \"Share\",   eroi = \"EROI\",   group.eroi = \"Group.eroi\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\",   Group.eroi.inversed = \"Group.eroi.inversed\",   eroi_calc_method = c(\"dta\", \"gma\") )"},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_final_stage_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","text":".tidy_erois_df tidy erois data frame (calculated product via input-output) aggregation needs done. .tidy_iea_df tidy_iea_df input-output erois calculated. include_non_energy_uses boolean indicating whether calculation use shares includes non-energy uses. Default FALSE. final_use_mats list matrices used calculating use shares energy product. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. product.group name column containing product group name. Default \"Product.Group\". country, method, energy_type, last_stage, year, product See IEATools::iea_cols. non_energy_uses name column stating whether non-energy uses included calculation use shares. Default \"Non_Energy_Uses\". eroi.method name column containing method used calculating erois. Default \"Eroi.method\". type name column containing type eroi calculated. Default \"Type\". boundary name column containing boundary eroi calculation. Default \"Boundary\". share name column containing share energy product supply within fossil fuel group. Default \"Share\". eroi name column containing energy-product level eroi value. Default \"EROI\". group.eroi name column containing fossil fuel group level eroi value. Default \"Group.eroi\". energy.stage name column containing energy stage calculation EROI. Default \"Energy.stage\". product_without_origin name column containing product name excluding origin product. Default \"product_without_origin\". Group.eroi.inversed Name temporary column computes inverse EROI. eroi_calc_method method used calculating erois. Default \"dta\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_final_stage_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","text":"tidy data frame containing aggregated final stage EROIs.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_final_stage_erois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_final_stage_erois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregates final stage EROIs by fossil fuel group — aggregate_final_stage_erois","text":"","code":"tidy_AB_dta <- ECCTools::tidy_AB_data %>% IEATools::add_psut_matnames() %>%  ECCTools::transform_to_dta() tidy_io_AB_dta <- tidy_AB_dta %>%   IEATools::prep_psut() %>%   Recca::calc_io_mats(method_q_calculation = \"sum_R_V_cols\") tidy_AB_erois_dta <- tidy_io_AB_dta %>%   Recca::calc_E_EIOU() %>%   Recca::calc_erois() %>%   EROITools::extract_tidy_product_erois() %>%   dplyr::mutate(    Eroi.method = \"DTA\"  ) %>%   dplyr::relocate(tidyselect::all_of(\"Eroi.method\"), .after = tidyselect::all_of(\"Year\")) res_dta <- aggregate_final_stage_erois(  .tidy_erois_df = tidy_AB_erois_dta,  .tidy_iea_df = tidy_AB_dta,  eroi_calc_method = \"dta\" )"},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_primary_stage_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","title":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","text":"function calculates aggregated primary stage EROIs fossil fuel group. determines shares supply energy product within fossil fuel group (default using V matrix), selects list energy products defined primary energy products (see arguments), shares determines average primary stage EROI fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_primary_stage_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","text":"","code":"aggregate_primary_stage_erois(   .tidy_erois_df,   .tidy_iea_df,   primary_production_mats = c(IEATools::psut_cols$V),   list_primary_oil_products = IEATools::primary_oil_products,   list_primary_coal_products = IEATools::primary_coal_products,   list_primary_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   eroi.method = \"Eroi.method\",   type = \"Type\",   boundary = \"Boundary\",   share = \"Share\",   eroi = \"EROI\",   group.eroi = \"Group.eroi\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\",   Group.eroi.inversed = \"Group.eroi.inversed\",   eroi_calc_method = c(\"dta\", \"gma\") )"},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_primary_stage_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","text":".tidy_erois_df tidy erois data frame (calculated product via input-output) aggregation needs done. .tidy_iea_df tidy_iea_df input-output erois calculated. primary_production_mats list matrices use primary production matrices determine share supply primary energy product. Default c(IEATools::psut_cols$V). list_primary_oil_products list primary oil products. Default IEATools::primary_oil_products. list_primary_coal_products list primary coal products. Default IEATools::primary_coal_products. list_primary_gas_products list primary gas products. Default IEATools::primary_gas_products. product.group name column containing product group name. Default \"Product.Group\". country, method, energy_type, last_stage, year, product See IEATools::iea_cols. eroi.method name column containing method used calculating erois. Default \"Eroi.method\". type name column containing type eroi calculated. Default \"Type\". boundary name column containing boundary eroi calculation. Default \"Boundary\". share name column containing share energy product supply within fossil fuel group. Default \"Share\". eroi name column containing energy-product level eroi value. Default \"EROI\". group.eroi name column containing fossil fuel group level eroi value. Default \"Group.eroi\". energy.stage name column containing energy stage calculation EROI. Default \"Energy.stage\". product_without_origin name column containing product name excluding origin product. Default \"product_without_origin\". Group.eroi.inversed Name temporary column computes inverse EROI. eroi_calc_method method used calculating erois. Default \"dta\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_primary_stage_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","text":"data frame returning aggregated primary stage EROIs fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_primary_stage_erois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_primary_stage_erois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregates primary stage EROIs by fossil fuel group — aggregate_primary_stage_erois","text":"","code":"tidy_AB_dta <- ECCTools::tidy_AB_data %>% IEATools::add_psut_matnames() %>%  ECCTools::transform_to_dta() tidy_io_AB_dta <- tidy_AB_dta %>%   IEATools::prep_psut() %>%   Recca::calc_io_mats(method_q_calculation = \"sum_R_V_cols\") tidy_AB_erois_dta <- tidy_io_AB_dta %>%   Recca::calc_E_EIOU() %>%   Recca::calc_erois() %>%   EROITools::extract_tidy_product_erois() %>%   dplyr::mutate(    Eroi.method = \"DTA\"  ) %>%   dplyr::relocate(tidyselect::all_of(\"Eroi.method\"), .after = tidyselect::all_of(\"Year\")) res_dta <- aggregate_primary_stage_erois(  .tidy_erois_df = tidy_AB_erois_dta,  .tidy_iea_df = tidy_AB_dta,  eroi_calc_method = \"dta\" )"},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_useful_stage_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","title":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","text":"function calculates aggregated useful stage EROIs fossil fuel group. determines shares uses energy product within fossil fuel group (default using Y U_eiou matrices), shares determines average useful stage EROI fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_useful_stage_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","text":"","code":"aggregate_useful_stage_erois(   .tidy_erois_df,   .tidy_iea_df,   include_non_energy_uses = FALSE,   final_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   non_energy_uses = \"Non_Energy_Uses\",   eroi.method = \"Eroi.method\",   type = \"Type\",   boundary = \"Boundary\",   share = \"Share\",   useful_stage_eroi = \"Useful_Stage_EROI\",   group.eroi = \"Group.eroi\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\",   Group.eroi.inversed = \"Group.eroi.inversed\",   eroi_calc_method = c(\"dta\", \"gma\") )"},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_useful_stage_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","text":".tidy_erois_df tidy erois data frame aggregation needs done. .tidy_iea_df tidy_iea_df input-output erois calculated. include_non_energy_uses boolean indicating whether calculation use shares includes non-energy uses. Default FALSE. final_use_mats list matrices used calculating use shares energy product. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. product.group name column containing product group name. Default \"Product.Group\". country, method, energy_type, last_stage, year, product See IEATools::iea_cols. non_energy_uses name column stating whether non-energy uses included calculation use shares. Default \"Non_Energy_Uses\". eroi.method name column containing method used calculating erois. Default \"Eroi.method\". type name column containing type eroi calculated. Default \"Type\". boundary name column containing boundary eroi calculation. Default \"Boundary\". share name column containing share energy product supply within fossil fuel group. Default \"Share\". useful_stage_eroi name column containing useful stage EROIs energy product. group.eroi name column containing fossil fuel group level eroi value. Default \"Group.eroi\". energy.stage name column containing energy stage calculation EROI. Default \"Energy.stage\". product_without_origin name column containing product name excluding origin product. Default \"product_without_origin\". Group.eroi.inversed Name temporary column computes inverse EROI. eroi_calc_method method used calculating erois. Default \"dta\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_useful_stage_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","text":"tidy data frame containing aggregated useful stage EROIs fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_useful_stage_erois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/aggregate_useful_stage_erois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aggregates useful stage EROIs by fossil fuel group — aggregate_useful_stage_erois","text":"","code":"tidy_AB_dta <- ECCTools::tidy_AB_data %>% IEATools::add_psut_matnames() %>%  ECCTools::transform_to_dta() # Calculating IO matrices tidy_io_AB_dta <- tidy_AB_dta %>%  IEATools::prep_psut() %>%  Recca::calc_io_mats(method_q_calculation = \"sum_R_V_cols\") # Calculating tidy IO EROIs tidy_AB_erois_dta <- tidy_io_AB_dta %>%  Recca::calc_E_EIOU() %>%  Recca::calc_erois() %>%  EROITools::extract_tidy_product_erois() %>%  dplyr::mutate(    Eroi.method = \"DTA\"  ) %>%  dplyr::relocate(tidyselect::all_of(\"Eroi.method\"), .after = tidyselect::all_of(\"Year\")) # Pushing to tidy useful stage EROIs length_to_use <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow() tidy_FU_efficiencies_dta <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   dplyr::mutate(    Average_Efficiency_Global = seq(0.15, 1, 0.85/(length_to_use-1))  ) tidy_useful_erois_dta <- tidy_AB_erois_dta %>%   dplyr::left_join(tidy_FU_efficiencies_dta,                   by = c(\"Country\", \"Method\", \"Energy.type\", \"Year\", \"Product\")) %>%  dplyr::mutate(    Useful_Stage_EROI = Average_Efficiency_Global * EROI  ) %>%   dplyr::filter(! is.na(Useful_Stage_EROI)) # Calculating aggregated EROIs: res_dta <- aggregate_useful_stage_erois(  .tidy_erois_df = tidy_useful_erois_dta,  .tidy_iea_df = tidy_AB_dta,  eroi_calc_method = \"dta\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_all_products_use_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the use of energy products by group — calc_all_products_use_by_group","title":"Calculates the use of energy products by group — calc_all_products_use_by_group","text":"function calculates use energy products group fossil fuel group. matrices containing energy use flows can specified total_use_mats argument. default, matrices U_EIOU Y, excludes energy flows used feedstock. Exports losses also excluded total energy use. See details explanations.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_all_products_use_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the use of energy products by group — calc_all_products_use_by_group","text":"","code":"calc_all_products_use_by_group(   .tidy_iea_df,   include_non_energy_uses = FALSE,   final_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   list_non_energy_flows = IEATools::non_energy_flows,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   total_group_use = \"Total_Group_Use\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_all_products_use_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the use of energy products by group — calc_all_products_use_by_group","text":".tidy_iea_df tidy iea data frame use energy products group needs calculated. include_non_energy_uses boolean indicating whether non-energy uses included calculation. Default FALSE. final_use_mats list describing matrices total final energy uses calculated. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list containing names oil products. Default IEATools::oil_and_oil_products. list_coal_products list containing names coal products. Default IEATools::coal_and_coal_products. list_gas_products list containing names gas products. Default IEATools::primary_gas_products. list_non_energy_flows list containing names non-energy flows IEA data. Default IEATools::non_energy_flows. exports string identifying Exports flows. Default IEATools::interface_industries$exports. losses string identifying Losses flows. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames column name column matrices names. Default IEATools::mat_meta_cols$matnames. product.group column name column defining fossil fuel group. Default \"Product.Group\". total_group_use Column name containing total energy use product group. Default \"Total_Group_Use\". energy.stage column name column defining energy stage. Default \"Energy.stage\". product_without_origin Column name containing name product excluding country origin. Helpful calculations Global Market Assumption. Default \"product_without_origin\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_all_products_use_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the use of energy products by group — calc_all_products_use_by_group","text":"tidy data frame indicating final energy use product group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_all_products_use_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the use of energy products by group — calc_all_products_use_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case. Non-energy use flows can included excluded calculations using include_non_energy_uses boolean.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_all_products_use_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the use of energy products by group — calc_all_products_use_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_all_products_use_by_group() #> # A tibble: 5 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Product.Group, #> #   Energy.stage [5] #>   Country Method Energy.type Last.stage  Year Product.Group   Energy.stage Unit  #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr>           <chr>        <chr> #> 1 A       PCM    E           Final       2018 Coal products   Final (fuel) ktoe  #> 2 A       PCM    E           Final       2018 Oil and gas pr… Final (fuel) ktoe  #> 3 A       PCM    E           Final       2018 Natural gas     Final (fuel) ktoe  #> 4 A       PCM    E           Final       2018 Oil products    Final (fuel) ktoe  #> 5 A       PCM    E           Final       2018 All fossil fue… Final (fuel) ktoe  #> # ℹ 1 more variable: Total_Group_Use <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_avg_efficiency_by_ff_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates average final-to-useful efficiency by fossil fuel group — calc_avg_efficiency_by_ff_group","title":"Calculates average final-to-useful efficiency by fossil fuel group — calc_avg_efficiency_by_ff_group","text":"function calculates average final--useful efficiencies fossil fuel group using average efficiency energy product shares use energy product within fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_avg_efficiency_by_ff_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates average final-to-useful efficiency by fossil fuel group — calc_avg_efficiency_by_ff_group","text":"","code":"calc_avg_efficiency_by_ff_group(   .tidy_efficiencies_df,   .tidy_iea_df,   include_non_energy_uses = FALSE,   final_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   share = \"Share\",   useful_stage_eroi = \"Useful_Stage_EROI\",   group.eroi = \"Group.eroi\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\",   average_efficiency = \"Average_Efficiency_Col\",   aggregated_efficiency = \"Aggregated_Efficiency\",   calc_method = c(\"dta\", \"gma\") )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_avg_efficiency_by_ff_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates average final-to-useful efficiency by fossil fuel group — calc_avg_efficiency_by_ff_group","text":".tidy_efficiencies_df tidy efficiencies data frame provides efficiencies use energy product. .tidy_iea_df .tidy_iea_df, shares use energy product determined. include_non_energy_uses boolean stating whether non_energy_uses used calculation use shares energy product/ Default FALSE. final_use_mats list matrices used calculation use shares energy product. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list oil products use calculation use shares energy product. Default IEATools::oil_and_oil_products. list_coal_products list coal products use calculation use shares energy product. Default IEATools::coal_and_coal_products. list_gas_products list gas products use calculation use shares energy product. Default IEATools::primary_gas_products. product.group name column containing name product group. Default \"Product.Group\". country, method, energy_type, last_stage, year, product See IEATools::iea_cols. share name column name containing shares use energy product. Default \"Share\". useful_stage_eroi name column containing useful stage EROI. Default \"Useful_Stage_EROI\". group.eroi name column containing group level EROI. Default \"Group.eroi\". energy.stage name column containing energy stage efficiencies calculated. Default \"Energy.stage\". product_without_origin name column containing product name excluding origin. Default \"product_without_origin\". average_efficiency name column containing average efficiency energy product. Default \"Average_Efficiency_Col\". aggregated_efficiency name column containing aggregated efficiency fossil fuel group. Default \"Aggregated_Efficiency\". calc_method calculation method used, either DTA working single country, GMA working multi-regional framework. Default \"dta\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_avg_efficiency_by_ff_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates average final-to-useful efficiency by fossil fuel group — calc_avg_efficiency_by_ff_group","text":"tidy data frame average final--useful efficiencies calculated fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_avg_efficiency_by_ff_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates average final-to-useful efficiency by fossil fuel group — calc_avg_efficiency_by_ff_group","text":"","code":"tidy_AB_dta <- ECCTools::tidy_AB_data %>%   IEATools::add_psut_matnames() %>%  ECCTools::transform_to_dta(requirement_matrices_list = c(\"U_feed\"),                         select_dta_observations = FALSE) # Building efficiencies data frame: length_to_use <- tidy_AB_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow() tidy_FU_efficiencies <- tidy_AB_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   dplyr::mutate(    Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))  ) # Calculating aggregated efficiencies aggregated_efficiencies_dta <- calc_avg_efficiency_by_ff_group(  .tidy_efficiencies_df = tidy_FU_efficiencies,  .tidy_iea_df = tidy_AB_dta,  calc_method = \"dta\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_elec_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","title":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","text":"function calculates final energy consumption electricity fossil fuel origin, fossil fuel group. determining total final consumption electricity (determined use matrices provided list_use_mats) applying share electricity supplied fossil fuel group, determined supply matrices provided list_supply_mats.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_elec_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","text":"","code":"calc_fec_from_ff_as_elec_by_group(   .tidy_iea_df,   list_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_supply_mats = c(IEATools::psut_cols$V),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   ledger_side = IEATools::iea_cols$ledger_side,   flow_aggregation_point = IEATools::iea_cols$flow_aggregation_point,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   share = \"Share\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_elec_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","text":".tidy_iea_df .tidy_iea_df final energy consumption electricity fossil fuel group needs determined. list_use_mats list matrices used determining total final energy consumption electricity. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_supply_mats list matrices used determining shares supply electricity fossil fuel group. Default c(IEATools::psut_cols$V). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. exports character string identifying exports flows .tidy_iea_df. Default IEATools::interface_industries$exports. losses character string identifying losses flows .tidy_iea_df. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, ledger_side, flow_aggregation_point, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames name column containing product group name. Default \"Product.Group\". product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage. Default \"Energy.stage\". share name column containing shares supply electricity fossil fuel group. Default \"Share\". product_without_origin name column containing product name excluding origin product. Default \"product_without_origin\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_elec_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","text":"tidy data frame containing total final energy consumption electricity, broken supplying fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_elec_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_elec_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates final energy consumption of electricity from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_elec_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_fec_from_ff_as_elec_by_group() #> # A tibble: 5 × 15 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Ledger.side, #> #   Flow.aggregation.point, Flow, Product, Unit, matnames [5] #>   Country Method Energy.type Last.stage  Year Ledger.side Flow.aggregation.point #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       <chr>                  #> 1 A       PCM    E           Final       2018 Consumption Industry               #> 2 A       PCM    E           Final       2018 Supply      Energy industry own u… #> 3 A       PCM    E           Final       2018 Supply      Energy industry own u… #> 4 A       PCM    E           Final       2018 Supply      Energy industry own u… #> 5 A       PCM    E           Final       2018 Supply      Energy industry own u… #> # ℹ 8 more variables: Flow <chr>, Product <chr>, Unit <chr>, matnames <chr>, #> #   product_without_origin <chr>, E.dot <dbl>, Product.Group <chr>, #> #   Energy.stage <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_fuel_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","title":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","text":"function calculates final energy consumption fuel (, excluding electricity heat), fossil fuel group. calculates list use matrices provided list_use_mats argument.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_fuel_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","text":"","code":"calc_fec_from_ff_as_fuel_by_group(   .tidy_iea_df,   include_non_energy_uses = FALSE,   list_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   list_non_energy_flows = IEATools::non_energy_flows,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_fuel_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","text":".tidy_iea_df .tidy_iea_df final energy consumption fuel fossil fuel group need calculated. include_non_energy_uses boolean indicating whether calculated final energy consumption included non-energy uses . Default FALSE. list_use_mats list matrices used determining total final energy consumption electricity. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. list_non_energy_flows list identifying non-energy flows. Default IEATools::non_energy_flows. exports character string identifying exports flows .tidy_iea_df. Default IEATools::interface_industries$exports. losses character string identifying losses flows .tidy_iea_df. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea__cols. matnames name column containing product group name. Default \"Product.Group\". product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage. Default \"Energy.stage\". product_without_origin name column containing product name without product origin. Default \"product_without_origin\"","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_fuel_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","text":"tidy data frame containing final energy consumption form fuel fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_fuel_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_fuel_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates final energy consumption of fuel by fossil fuel group — calc_fec_from_ff_as_fuel_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_fec_from_ff_as_fuel_by_group() #> # A tibble: 5 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Unit, Product.Group #> #   [5] #>   Country Method Energy.type Last.stage  Year Unit  Product.Group   Energy.stage #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr> <chr>           <chr>        #> 1 A       PCM    E           Final       2018 ktoe  All fossil fue… Final        #> 2 A       PCM    E           Final       2018 ktoe  Coal products   Final        #> 3 A       PCM    E           Final       2018 ktoe  Natural gas     Final        #> 4 A       PCM    E           Final       2018 ktoe  Oil and gas pr… Final        #> 5 A       PCM    E           Final       2018 ktoe  Oil products    Final        #> # ℹ 1 more variable: E.dot <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_heat_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","title":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","text":"function calculates final energy consumption heat fossil fuel origin, fossil fuel group. determining total final consumption heat (use matrices list_use_mats) applying share heat supplied fossil fuel group (determined supply matrices list_supply_mats).","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_heat_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","text":"","code":"calc_fec_from_ff_as_heat_by_group(   .tidy_iea_df,   list_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_supply_mats = c(IEATools::psut_cols$V),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   ledger_side = IEATools::iea_cols$ledger_side,   flow_aggregation_point = IEATools::iea_cols$flow_aggregation_point,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   share = \"Share\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_heat_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","text":".tidy_iea_df .tidy_iea_df final energy consumption heat fossil fuel group needs determined. list_use_mats list matrices used determining total final energy consumption heat. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_supply_mats list matrices used determining shares supply heat fossil fuel group. Default c(IEATools::psut_cols$V). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. exports character string identifying exports flows .tidy_iea_df. Default IEATools::interface_industries$exports. losses character string identifying losses flows .tidy_iea_df. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, ledger_side, flow_aggregation_point, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames name column containing matrices names. Default IEATools::mat_meta_cols$matnames. product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage. Default \"Energy.stage\". share name column containing shares supply heat fossil fuel group. Default \"Share\". product_without_origin name column containing product name excluding origin product. Default \"product_without_origin\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_heat_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","text":"tidy data frame containing total final energy consumption heat, broken supplying fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_heat_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_as_heat_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates final energy consumption of heat from fossil fuel origin, by fossil fuel group — calc_fec_from_ff_as_heat_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_fec_from_ff_as_heat_by_group() #> # A tibble: 4 × 15 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Ledger.side, #> #   Flow.aggregation.point, Flow, Product, Unit, matnames [4] #>   Country Method Energy.type Last.stage  Year Ledger.side Flow.aggregation.point #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       <chr>                  #> 1 A       PCM    E           Final       2018 Consumption Industry               #> 2 A       PCM    E           Final       2018 Supply      Energy industry own u… #> 3 A       PCM    E           Final       2018 Supply      Energy industry own u… #> 4 A       PCM    E           Final       2018 Supply      Energy industry own u… #> # ℹ 8 more variables: Flow <chr>, Product <chr>, Unit <chr>, matnames <chr>, #> #   product_without_origin <chr>, E.dot <dbl>, Product.Group <chr>, #> #   Energy.stage <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","title":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","text":"function calculates final energy consumption supplied fossil fuel group, including form electricity heat. calculates using list use matrices supplied user, list supply matrices determine share supply electricity heat fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","text":"","code":"calc_fec_from_ff_by_group(   .tidy_iea_df,   include_non_energy_uses = FALSE,   list_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_supply_mats = c(IEATools::psut_cols$V),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   list_non_energy_flows = IEATools::non_energy_flows,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","text":".tidy_iea_df .tidy_iea_df final energy consumption supplied fossil fuel group needs calculated. include_non_energy_uses boolean indicating whether non-energy uses included calculation final energy consumption fossil fuel group. Default \"FALSE\". list_use_mats list matrices used determining total final energy consumption fossil fuel group. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_supply_mats list matrices used determining shares supply heat electricity fossil fuel group. Default c(IEATools::psut_cols$V). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. list_non_energy_flows list identifying non-energy flows. Default IEATools::non_energy_flows. exports character string identifying exports flows .tidy_iea_df. Default IEATools::interface_industries$exports. losses character string identifying losses flows .tidy_iea_df. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames name column containing product group name. Default \"Product.Group\". product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage. Default \"Energy.stage\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","text":"tidy data frame containing final energy consumption supplied fossil fuel group, including form heat electricity.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function).","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_fec_from_ff_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates final energy consumption supplied by each fossil fuel group, including in the form of electricity and heat — calc_fec_from_ff_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_fec_from_ff_by_group() #> # A tibble: 6 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Unit, Product.Group #> #   [6] #>   Country Method Energy.type Last.stage  Year Unit  Product.Group   Energy.stage #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr> <chr>           <chr>        #> 1 A       PCM    E           Final       2018 ktoe  All fossil fue… Final        #> 2 A       PCM    E           Final       2018 ktoe  Coal products   Final        #> 3 A       PCM    E           Final       2018 ktoe  Natural gas     Final        #> 4 A       PCM    E           Final       2018 ktoe  Oil and gas pr… Final        #> 5 A       PCM    E           Final       2018 ktoe  Oil products    Final        #> 6 A       PCM    E           Final       2018 ktoe  NA              NA           #> # ℹ 1 more variable: E.dot <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_primary_products_supply_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates primary energy supply for each fossil fuel group — calc_primary_products_supply_by_group","title":"Calculates primary energy supply for each fossil fuel group — calc_primary_products_supply_by_group","text":"function calculates primary energy supply primary stage fossil fuel group (coal products, oil gas products, fossil fuels). disaggregate oil gas products group jointly extracted, robust separate EROI calculations, least IEA data use . default, uses flows V matrix selects primary energy products determine primary energy production flows.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_primary_products_supply_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates primary energy supply for each fossil fuel group — calc_primary_products_supply_by_group","text":"","code":"calc_primary_products_supply_by_group(   .tidy_iea_df,   primary_production_mats = c(IEATools::psut_cols$V),   list_primary_oil_products = IEATools::primary_oil_products,   list_primary_coal_products = IEATools::primary_coal_products,   list_primary_gas_products = IEATools::primary_gas_products,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   total_group_supply = \"Total_Group_Supply\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_primary_products_supply_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates primary energy supply for each fossil fuel group — calc_primary_products_supply_by_group","text":".tidy_iea_df tidy iea data frame primary energy supply needs calculated. primary_production_mats list containing names matrices containing primary production flows. Default c(IEATools::psut_cols$V). list_primary_oil_products list containing names primary oil products. Default IEATools::primary_oil_products. list_primary_coal_products list containing names primary coal products. Default IEATools::primary_coal_products,. list_primary_gas_products list containing names primary gas products. Default IEATools::primary_gas_products,. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames column name column matrices names. Default IEATools::mat_meta_cols$matnames. product.group column name column defining fossil fuel group. Default \"Product.Group\". energy.stage column name column defining energy stage. Default \"Energy.stage\". total_group_supply Column name containing total energy supply product group. Default \"Total_Group_Supply\". product_without_origin Column name containing name product excluding country origin. Helpful calculations Global Market Assumption. Default \"product_without_origin\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_primary_products_supply_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates primary energy supply for each fossil fuel group — calc_primary_products_supply_by_group","text":"tidy data frame returning total primary energy supply fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_primary_products_supply_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates primary energy supply for each fossil fuel group — calc_primary_products_supply_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_primary_products_supply_by_group() #> # A tibble: 3 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Product.Group, #> #   Energy.stage [3] #>   Country Method Energy.type Last.stage  Year Product.Group   Energy.stage Unit  #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr>           <chr>        <chr> #> 1 A       PCM    E           Final       2018 Coal products   Primary      ktoe  #> 2 A       PCM    E           Final       2018 Oil and gas pr… Primary      ktoe  #> 3 A       PCM    E           Final       2018 All fossil fue… Primary      ktoe  #> # ℹ 1 more variable: Total_Group_Supply <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_elec_supply_by_ff_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","title":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","text":"function calculates, country, share electricity supplied fossil fuel group, domestically produced electricity. , shares add unity - indeed electricity supplied renewables nuclear.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_elec_supply_by_ff_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","text":"","code":"calc_share_elec_supply_by_ff_group(   .tidy_iea_df,   list_supply_mats = c(IEATools::psut_cols$V),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   share = \"Share\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_elec_supply_by_ff_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","text":".tidy_iea_df .tidy_iea_df share electricity provided fossil fuel group needs calculated. list_supply_mats list supply matrices used calculating shares. Default c(IEATools::psut_cols$V). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. exports character string identifying exports flows .tidy_iea_df. Default IEATools::interface_industries$exports. losses character string identifying losses flows .tidy_iea_df. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames name column containing matrices names. Default IEATools::mat_meta_cols$matnames. product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage. Default \"Energy.stage\". share name column containing shares heat delivered fossil fuel group. product_without_origin name column containing product name without product origin. Default \"product_without_origin\"","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_elec_supply_by_ff_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","text":"tidy data frame containing shares heat delivered fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_elec_supply_by_ff_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","text":"Fossil fuel groups used \"fossil fuels\", \"Oil gas products\", \"Oil products\", \"Natural gas\", \"Coal products\", obviously exclusive. function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_elec_supply_by_ff_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the share of electricity provided by each fossil fuel group — calc_share_elec_supply_by_ff_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_share_elec_supply_by_ff_group() #> # A tibble: 0 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Unit [0] #> # ℹ 9 variables: Country <chr>, Method <chr>, Energy.type <chr>, #> #   Last.stage <chr>, Year <dbl>, Unit <chr>, Product.Group <chr>, #> #   Energy.stage <chr>, Share <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_ff_use_by_product_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","title":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","text":"function calculates shares product use within fossil fuel group. matrices containing energy use flows can specified final_use_mats argument. default, matrices U_EIOU Y, excludes energy flows used feedstock. Exports losses also excluded total energy use. See details explanations.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_ff_use_by_product_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","text":"","code":"calc_share_ff_use_by_product_by_group(   .tidy_iea_df,   include_non_energy_uses = FALSE,   final_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   total_product_use = \"Total_Product_Use\",   total_group_use = \"Total_Group_Use\",   non_energy_uses = \"Non_Energy_Uses\",   share = \"Share\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   unit = IEATools::iea_cols$unit,   product = IEATools::iea_cols$product,   boolean_non_energy_uses = \"Boolean_Non_Energy_Uses\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_ff_use_by_product_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","text":".tidy_iea_df tidy iea data frame shares product use within fossil fuel group need calculated. include_non_energy_uses boolean indicating whether non-energy uses included calculation. Default FALSE. final_use_mats list describing matrices total final energy uses calculated. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list containing names oil products. Default IEATools::oil_and_oil_products. list_coal_products list containing names coal products. Default IEATools::coal_and_coal_products. list_gas_products list containing names gas products. Default IEATools::primary_gas_products. product.group column name column defining fossil fuel group. Default \"Product.Group\". total_product_use Column name containing total energy use product. Default \"Total_Product_Use\". total_group_use Column name containing total energy use product group. Default \"Total_Group_Use\". non_energy_uses name column stating whether non-energy use flows included computing shares. Default \"Non_Energy_Uses\". share name column returning shares product use within fossil fuel group. Default \"Share\". country, method, energy_type, last_stage, year, unit, product See IEATools::iea_cols. boolean_non_energy_uses temporary column name stating whether non-energy flows included. Default \"Boolean_Non_Energy_Uses\". energy.stage column name column defining energy stage. Default \"Energy.stage\". product_without_origin name column containing product name without product origin. Default \"product_without_origin\"","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_ff_use_by_product_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","text":"tidy data frame reporting shares product use within fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_ff_use_by_product_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function), energy use product returned pair (Origin_Country, Product). Non-energy use flows can included excluded calculations using include_non_energy_uses boolean.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_ff_use_by_product_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the shares of each product use within each fossil fuel group — calc_share_ff_use_by_product_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_share_ff_use_by_product_by_group() #> # A tibble: 13 × 14 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Product.Group, #> #   Energy.stage [5] #>    Country Method Energy.type Last.stage  Year Product.Group  Energy.stage Unit  #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>          <chr>        <chr> #>  1 A       PCM    E           Final       2018 Coal products  Final (fuel) ktoe  #>  2 A       PCM    E           Final       2018 Coal products  Final (fuel) ktoe  #>  3 A       PCM    E           Final       2018 Oil and gas p… Final (fuel) ktoe  #>  4 A       PCM    E           Final       2018 Oil and gas p… Final (fuel) ktoe  #>  5 A       PCM    E           Final       2018 Oil and gas p… Final (fuel) ktoe  #>  6 A       PCM    E           Final       2018 Natural gas    Final (fuel) ktoe  #>  7 A       PCM    E           Final       2018 Oil products   Final (fuel) ktoe  #>  8 A       PCM    E           Final       2018 Oil products   Final (fuel) ktoe  #>  9 A       PCM    E           Final       2018 All fossil fu… Final (fuel) ktoe  #> 10 A       PCM    E           Final       2018 All fossil fu… Final (fuel) ktoe  #> 11 A       PCM    E           Final       2018 All fossil fu… Final (fuel) ktoe  #> 12 A       PCM    E           Final       2018 All fossil fu… Final (fuel) ktoe  #> 13 A       PCM    E           Final       2018 All fossil fu… Final (fuel) ktoe  #> # ℹ 6 more variables: Total_Group_Use <dbl>, Product <chr>, #> #   product_without_origin <chr>, Total_Product_Use <dbl>, Share <dbl>, #> #   Non_Energy_Uses <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_heat_supply_by_ff_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","title":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","text":"function calculates, country, share heat supplied fossil fuel group, domestically produced heat. , shares add unity - indeed heat supplied renewables nuclear.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_heat_supply_by_ff_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","text":"","code":"calc_share_heat_supply_by_ff_group(   .tidy_iea_df,   list_supply_mats = c(IEATools::psut_cols$V),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   energy.stage = \"Energy.stage\",   share = \"Share\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_heat_supply_by_ff_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","text":".tidy_iea_df .tidy_iea_df share heat provided fossil fuel group needs calculated. list_supply_mats list supply matrices used calculating shares. Default c(IEATools::psut_cols$V). list_oil_products list oil products used calculating use shares. Default IEATools::oil_and_oil_products. list_coal_products list coal products used calculating use shares. Default IEATools::coal_and_coal_products. list_gas_products list gas products used calculating use shares. Default IEATools::primary_gas_products. exports character string identifying exports flows .tidy_iea_df. Default IEATools::interface_industries$exports. losses character string identifying losses flows .tidy_iea_df. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames name column containing matrices names. Default IEATools::mat_meta_cols$matnames. product.group name column containing product group name. Default \"Product.Group\". energy.stage name column containing energy stage. Default \"Energy.stage\". share name column containing shares heat delivered fossil fuel group. product_without_origin name column containing product name without product origin. Default \"product_without_origin\"","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_heat_supply_by_ff_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","text":"tidy data frame containing shares heat delivered fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_heat_supply_by_ff_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","text":"Fossil fuel groups used \"fossil fuels\", \"Oil gas products\", \"Oil products\", \"Natural gas\", \"Coal products\", obviously exclusive. function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function)","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_heat_supply_by_ff_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the share of heat provided by each fossil fuel group — calc_share_heat_supply_by_ff_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_share_heat_supply_by_ff_group() #> # A tibble: 0 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Unit [0] #> # ℹ 9 variables: Country <chr>, Method <chr>, Energy.type <chr>, #> #   Last.stage <chr>, Year <dbl>, Unit <chr>, Product.Group <chr>, #> #   Energy.stage <chr>, Share <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_primary_ff_supply_by_product_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","title":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","text":"function calculates primary energy supply shares product within fossil fuel group. default, uses flows \"V\" matrix selects primary energy products fossil fuel group, \"fossil fuels\", \"Oil gas products\", \"Coal products\". Oil products natural gas differentiated point primary extraction differentiated IEA data.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_primary_ff_supply_by_product_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","text":"","code":"calc_share_primary_ff_supply_by_product_by_group(   .tidy_iea_df,   primary_production_mats = c(IEATools::psut_cols$V),   list_primary_oil_products = IEATools::primary_oil_products,   list_primary_coal_products = IEATools::primary_coal_products,   list_primary_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   total_product_supply = \"Total_Product_Supply\",   total_group_supply = \"Total_Group_Supply\",   share = \"Share\",   energy.stage = \"Energy.stage\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   unit = IEATools::iea_cols$unit,   product = IEATools::iea_cols$product,   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_primary_ff_supply_by_product_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","text":".tidy_iea_df tidy iea data frame supply shares product within fossil fuel group need calculated. primary_production_mats list containing names matrices containing primary production flows. Default c(IEATools::psut_cols$V). list_primary_oil_products list containing names primary oil products. Default IEATools::primary_oil_products. list_primary_coal_products list containing names primary coal products. Default IEATools::primary_coal_products,. list_primary_gas_products list containing names primary gas products. Default IEATools::primary_gas_products,. product.group column name column defining fossil fuel group. Default \"Product.Group\". total_product_supply Column name containing total primary energy supply product. Default \"Total_Product_Supply\". total_group_supply Column name containing total primary energy use product group. Default \"Total_Group_Supply\". share name column returning shares product use within fossil fuel group. Default \"Share\". energy.stage column name column defining energy stage. Default \"Energy.stage\". country, method, energy_type, last_stage, year, unit, product See IEATools::iea_cols. product_without_origin name column containing product name without product origin. Default \"product_without_origin\"","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_primary_ff_supply_by_product_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","text":"tidy data frame returning primary energy supply shares product within fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_primary_ff_supply_by_product_by_group.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_share_primary_ff_supply_by_product_by_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the primary energy supply shares of each product within each fossil fuel group — calc_share_primary_ff_supply_by_product_by_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_share_primary_ff_supply_by_product_by_group() #> # A tibble: 6 × 13 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Product.Group, #> #   Energy.stage [3] #>   Country Method Energy.type Last.stage  Year Product.Group   Energy.stage Unit  #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr>           <chr>        <chr> #> 1 A       PCM    E           Final       2018 Coal products   Primary      ktoe  #> 2 A       PCM    E           Final       2018 Oil and gas pr… Primary      ktoe  #> 3 A       PCM    E           Final       2018 Oil and gas pr… Primary      ktoe  #> 4 A       PCM    E           Final       2018 All fossil fue… Primary      ktoe  #> 5 A       PCM    E           Final       2018 All fossil fue… Primary      ktoe  #> 6 A       PCM    E           Final       2018 All fossil fue… Primary      ktoe  #> # ℹ 5 more variables: Total_Group_Supply <dbl>, Product <chr>, #> #   product_without_origin <chr>, Total_Product_Supply <dbl>, Share <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_elec_by_ff_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the share of electricity supplied by each fossil fuel within each fossil fuel group — calc_shares_elec_by_ff_group","title":"Calculates the share of electricity supplied by each fossil fuel within each fossil fuel group — calc_shares_elec_by_ff_group","text":"function calculates share electricity supplied fossil fuel within fossil fuel group, two following fossil fuel groups \"Oil gas products\", \"fossil fuels\". gives share supplied respectively Coal products, Oil products, Natural gas, groups. shares add unity necessarily.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_elec_by_ff_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the share of electricity supplied by each fossil fuel within each fossil fuel group — calc_shares_elec_by_ff_group","text":"","code":"calc_shares_elec_by_ff_group(   .tidy_iea_df,   supply_mats_list = c(IEATools::psut_cols$V),   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   share = \"Share\",   energy.stage = \"Energy.stage\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   unit = IEATools::iea_cols$unit,   product = IEATools::iea_cols$product,   e.dot = IEATools::iea_cols$e_dot,   product_without_origin = \"product_without_origin\",   non_energy_uses = \"Non_Energy_Uses\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_elec_by_ff_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the share of electricity supplied by each fossil fuel within each fossil fuel group — calc_shares_elec_by_ff_group","text":".tidy_iea_df name .tidy_iea_df share electricity supplied fossil fuel need calculated. supply_mats_list list supply matrices used calculating electricity supply mix. Default c(IEATools::psut_cols$V). matnames name column containing matrices names. Default \"matnames\". product.group name column containing product group name. Default \"Product.Group\". share name column containing shares fossil fuel within electricity supply. Default \"Share\". energy.stage name column containing energy stage. Default \"Energy.stage\". country, method, energy_type, last_stage, year, unit, product, e.dot See IEATools::iea_cols. product_without_origin name column containing product name without product origin. Default \"product_without_origin\". non_energy_uses name column stating whether non-energy uses included calculation shares supply. Default \"Non_Energy_Uses\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_elec_by_ff_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the share of electricity supplied by each fossil fuel within each fossil fuel group — calc_shares_elec_by_ff_group","text":".tidy_iea_df shares electricity supply specified fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_elec_by_ff_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the share of electricity supplied by each fossil fuel within each fossil fuel group — calc_shares_elec_by_ff_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_shares_elec_by_ff_group() #> # A tibble: 0 × 10 #> # ℹ 10 variables: Country <chr>, Method <chr>, Energy.type <chr>, #> #   Last.stage <chr>, Year <dbl>, Product.Group <chr>, Energy.stage <chr>, #> #   Product <chr>, Share <dbl>, Non_Energy_Uses <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_ff_by_group_inc_elec_heat.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","title":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","text":"function calculates share use (using matrices provided final_use_mats argument) energy product within fossil fuel group, including electricity heat fossil fuel origin calculations.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_ff_by_group_inc_elec_heat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","text":"","code":"calc_shares_ff_by_group_inc_elec_heat(   .tidy_iea_df,   include_non_energy_uses = FALSE,   final_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   product.group = \"Product.Group\",   total_product_use = \"Total_Product_Use\",   total_group_use = \"Total_Group_Use\",   non_energy_uses = \"Non_Energy_Uses\",   share = \"Share\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   unit = IEATools::iea_cols$unit,   e_dot = IEATools::iea_cols$e_dot,   product = IEATools::iea_cols$product,   boolean_non_energy_uses = \"Boolean_Non_Energy_Uses\",   energy.stage = \"Energy.stage\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_ff_by_group_inc_elec_heat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","text":".tidy_iea_df .tidy_iea_df share uses calculated. include_non_energy_uses boolean indicating whether non-energy uses included calculation share uses. Default FALSE. final_use_mats list matrices used calculate share uses. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list oil products used shares calculations. Default IEATools::oil_and_oil_products. list_coal_products list coal products used shares calculations. Default IEATools::coal_and_coal_products. list_gas_products list gas products used shares calculations. Default IEATools::primary_gas_products. product.group name column containing product group name. Default \"Product.Group\". total_product_use name column containing total energy use product. Default \"Total_Product_Use\". total_group_use name column containing total energy use fossil fuel group. Default \"Total_Group_Use\". non_energy_uses name column stating whether non-energy uses included shares calculations. Default \"Non_Energy_Uses\". share name column containing shares fossil fuel within electricity supply. Default \"Share\". country, method, energy_type, last_stage, year, unit, e_dot, product See IEATools::iea_cols. boolean_non_energy_uses column name column containing boolean stating whether non-energy uses included shares calculations. Default \"Boolean_Non_Energy_Uses\". energy.stage name column containing energy stage. Default \"Energy.stage\". product_without_origin name column containing product name without product origin. Default \"product_without_origin\"","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_ff_by_group_inc_elec_heat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","text":".tidy_iea_df shares use energy product within fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_ff_by_group_inc_elec_heat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function). Non-energy uses can included excluded using include_non_energy_uses argument.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_ff_by_group_inc_elec_heat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the share of use of each energy product within each fossil fuel group, including electricity and heat uses — calc_shares_ff_by_group_inc_elec_heat","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_shares_ff_by_group_inc_elec_heat() #> # A tibble: 13 × 14 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Product.Group, #> #   Energy.stage [5] #>    Country Method Energy.type Last.stage  Year Product                     Unit  #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>                       <chr> #>  1 A       PCM    E           Final       2018 Blast furnace gas           ktoe  #>  2 A       PCM    E           Final       2018 Coke oven coke              ktoe  #>  3 A       PCM    E           Final       2018 Kerosene type jet fuel exc… ktoe  #>  4 A       PCM    E           Final       2018 Motor gasoline excl. biofu… ktoe  #>  5 A       PCM    E           Final       2018 Natural gas                 ktoe  #>  6 A       PCM    E           Final       2018 Blast furnace gas           ktoe  #>  7 A       PCM    E           Final       2018 Coke oven coke              ktoe  #>  8 A       PCM    E           Final       2018 Kerosene type jet fuel exc… ktoe  #>  9 A       PCM    E           Final       2018 Motor gasoline excl. biofu… ktoe  #> 10 A       PCM    E           Final       2018 Natural gas                 ktoe  #> 11 A       PCM    E           Final       2018 Kerosene type jet fuel exc… ktoe  #> 12 A       PCM    E           Final       2018 Motor gasoline excl. biofu… ktoe  #> 13 A       PCM    E           Final       2018 Natural gas                 ktoe  #> # ℹ 7 more variables: product_without_origin <chr>, Total_Product_Use <dbl>, #> #   Product.Group <chr>, Energy.stage <chr>, Total_Group_Use <dbl>, #> #   Share <dbl>, Non_Energy_Uses <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_heat_by_ff_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates the share of heat supplied by each fossil fuel within each fossil fuel group — calc_shares_heat_by_ff_group","title":"Calculates the share of heat supplied by each fossil fuel within each fossil fuel group — calc_shares_heat_by_ff_group","text":"function calculates share heat supplied fossil fuel within fossil fuel group, two following fossil fuel groups \"Oil gas products\", \"fossil fuels\". gives share supplied respectively Coal products, Oil products, Natural gas, groups. shares add unity necessarily.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_heat_by_ff_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates the share of heat supplied by each fossil fuel within each fossil fuel group — calc_shares_heat_by_ff_group","text":"","code":"calc_shares_heat_by_ff_group(   .tidy_iea_df,   supply_mats_list = c(IEATools::psut_cols$V),   matnames = IEATools::mat_meta_cols$matnames,   product.group = \"Product.Group\",   share = \"Share\",   energy.stage = \"Energy.stage\",   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   unit = IEATools::iea_cols$unit,   product = IEATools::iea_cols$product,   e.dot = IEATools::iea_cols$e_dot,   product_without_origin = \"product_without_origin\",   non_energy_uses = \"Non_Energy_Uses\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_heat_by_ff_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates the share of heat supplied by each fossil fuel within each fossil fuel group — calc_shares_heat_by_ff_group","text":".tidy_iea_df name .tidy_iea_df share heat supplied fossil fuel need calculated. supply_mats_list list supply matrices used calculating heat supply mix. Default c(IEATools::psut_cols$V). matnames name column containing matrices names. Default \"matnames\". product.group name column containing product group name. Default \"Product.Group\". share name column containing shares fossil fuel within electricity supply. Default \"Share\". energy.stage name column containing energy stage. Default \"Energy.stage\". country, method, energy_type, last_stage, year, unit, product, e.dot See IEATools::iea_cols. product_without_origin name column containing product name without product origin. Default \"product_without_origin\" non_energy_uses name column indicating whether non-energy uses included calculation. Default \"Non_Energy_Uses\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_heat_by_ff_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates the share of heat supplied by each fossil fuel within each fossil fuel group — calc_shares_heat_by_ff_group","text":".tidy_iea_df shares heat supply specified fossil fuel group.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_shares_heat_by_ff_group.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates the share of heat supplied by each fossil fuel within each fossil fuel group — calc_shares_heat_by_ff_group","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_shares_heat_by_ff_group() #> # A tibble: 0 × 10 #> # ℹ 10 variables: Country <chr>, Method <chr>, Energy.type <chr>, #> #   Last.stage <chr>, Year <dbl>, Product.Group <chr>, Energy.stage <chr>, #> #   Product <chr>, Share <dbl>, Non_Energy_Uses <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/calc_total_use_by_product.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates total energy use by product — calc_total_use_by_product","title":"Calculates total energy use by product — calc_total_use_by_product","text":"function calculates, country, year, method, total energy use product (fossil fuels), matrices containing energy use flows can specified total_use_mats argument. default, matrices U_EIOU Y, excludes energy flows used feedstock. Exports losses also excluded total energy use. See details explanations.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_total_use_by_product.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates total energy use by product — calc_total_use_by_product","text":"","code":"calc_total_use_by_product(   .tidy_iea_df,   include_non_energy_uses = FALSE,   total_use_mats = c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou),   list_oil_products = IEATools::oil_and_oil_products,   list_coal_products = IEATools::coal_and_coal_products,   list_gas_products = IEATools::primary_gas_products,   list_non_energy_flows = IEATools::non_energy_flows,   exports = IEATools::interface_industries$exports,   losses = IEATools::tfc_compare_flows$losses,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   unit = IEATools::iea_cols$unit,   flow = IEATools::iea_cols$flow,   e_dot = IEATools::iea_cols$e_dot,   matnames = IEATools::mat_meta_cols$matnames,   total_product_use = \"Total_Product_Use\",   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/calc_total_use_by_product.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates total energy use by product — calc_total_use_by_product","text":".tidy_iea_df Tidy data frame calculate total energy use product include_non_energy_uses boolean defining whether non-energy uses included calculation total final energy use. Default FALSE. total_use_mats list describing matrices total final energy uses calculated. Default c(IEATools::psut_cols$Y, IEATools::psut_cols$U_eiou). list_oil_products list oil products. Default IEATools::oil_and_oil_products. list_coal_products list coal products. Default IEATools::coal_and_coal_products. list_gas_products list natural gas products. Default IEATools::primary_gas_products. list_non_energy_flows list containing names non-energy flows IEA data. Default IEATools::non_energy_flows. exports string identifying Exports flows. Default IEATools::interface_industries$exports. losses string identifying Losses flows. Default IEATools::tfc_compare_flows$losses. country, method, energy_type, last_stage, year, product, unit, flow, e_dot See IEATools::iea_cols. matnames column name column matrices names. Default IEATools::mat_meta_cols$matnames. total_product_use Column name containing total energy use product. Default \"Total_Product_Use\". product_without_origin Column name containing name product excluding country origin. Helpful calculations Global Market Assumption. Default \"product_without_origin\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_total_use_by_product.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates total energy use by product — calc_total_use_by_product","text":"data frame containing values total energy use product.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_total_use_by_product.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Calculates total energy use by product — calc_total_use_by_product","text":"function can work single country Energy Conversion Chain Domestic Technology Assumption type, multi-regional Energy Conversion Chain instance using Global Market Assumption. input data frame slightly adapted case (example see tests related function), energy use product returned pair (Origin_Country, Product). Non-energy use flows can included excluded calculations using include_non_energy_uses boolean.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/calc_total_use_by_product.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates total energy use by product — calc_total_use_by_product","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_dta() %>%     calc_total_use_by_product() #> # A tibble: 5 × 9 #> # Groups:   Country, Method, Energy.type, Last.stage, Year, Product, Unit [5] #>   Country Method Energy.type Last.stage  Year Product                      Unit  #>   <chr>   <chr>  <chr>       <chr>      <dbl> <chr>                        <chr> #> 1 A       PCM    E           Final       2018 Blast furnace gas            ktoe  #> 2 A       PCM    E           Final       2018 Coke oven coke               ktoe  #> 3 A       PCM    E           Final       2018 Kerosene type jet fuel excl… ktoe  #> 4 A       PCM    E           Final       2018 Motor gasoline excl. biofue… ktoe  #> 5 A       PCM    E           Final       2018 Natural gas                  ktoe  #> # ℹ 2 more variables: product_without_origin <chr>, Total_Product_Use <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Data pronoun — .data","title":"Data pronoun — .data","text":"See rlang::.data details.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Data pronoun — .data","text":"","code":".data"},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_industry_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","title":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","text":"function extracts industry level EROIs tidy Input Output matrices, tidy format.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_industry_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","text":"","code":"extract_tidy_industry_erois(   .tidy_io_mats,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   matnames = IEATools::mat_meta_cols$matnames,   matvals = IEATools::mat_meta_cols$matvals,   eroi_g_i = \"eroi_g_i\",   eroi_n_i = \"eroi_n_i\",   eroi_g_i_feed = \"eroi_g_i_feed\",   eroi_n_i_feed = \"eroi_n_i_feed\",   type = \"Type\",   boundary = \"Boundary\",   eroi = \"EROI\",   industry = \"Industry_name\",   colnames = \"colnames\",   rowtypes = \"rowtypes\",   coltypes = \"coltypes\" )"},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_industry_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","text":".tidy_io_mats .tidy_io_mats data frame EROIs extracted. country, method, energy_type, last_stage, year See IEATools::iea_cols. matnames column name column matrices names. Default IEATools::mat_meta_cols$matnames. matvals column name column reporting matrices values, expanded. Default IEATools::mat_meta_cols$matvals. eroi_g_i name column containing vectors industry-level gross EROIs, including energy use feedstock EIOU production. Default \"eroi_g_i\". eroi_n_i name column containing vectors industry-level net EROIs, including energy use feedstock EIOU production. Default \"eroi_n_i\". eroi_g_i_feed name column containing vectors industry-level gross EROIs, including energy use feedstock production. Default \"eroi_g_i_feed\". eroi_n_i_feed name column containing vectors industry-level net EROIs, including energy use feedstock production. Default \"eroi_g_i_feed\". type name EROI type column (.e. gross net EROI). Default \"Type\". boundary name boundary column. Default \"Boundary\". eroi name product EROI column output. Default \"EROI\". industry name industry column returned output data frame. Default \"Industry_name\". colnames name columns expanding matrices. Default \"colnames\". rowtypes name row types expanding matrices. Default \"rowtypes\". coltypes name column types expanding matrices. Default \"coltypes\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_industry_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","text":"data frame reporting calculated EROIs tidy format.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_industry_erois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","text":"function can called calculating EROIs Recca::calc_erois() function. type column indicates whether calculated EROI gross net. boundary column indicates whether EROI includes: energy use feedstock production (\"Feedstock\"); energy use feedstock production EIOU production (\"\").","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_industry_erois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts industry level EROIs from tidy Input Output matrices — extract_tidy_industry_erois","text":"","code":"# Let's first have a look at the raw data obtained when calculating EROIs: calculated_erois_raw <- ECCTools::tidy_AB_data %>%  IEATools::prep_psut() %>%  Recca::calc_io_mats() %>%  Recca::calc_E_EIOU() %>%  Recca::calc_erois() %>%  dplyr::glimpse() #> Rows: 2 #> Columns: 39 #> $ Country       <chr> \"A\", \"B\" #> $ Method        <chr> \"PCM\", \"PCM\" #> $ Energy.type   <chr> \"E\", \"E\" #> $ Last.stage    <chr> \"Final\", \"Final\" #> $ Year          <dbl> 2018, 2018 #> $ Y             <list> <<matrix[9 x 6]>>, <<matrix[7 x 4]>> #> $ S_units       <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ R             <list> <<matrix[4 x 4]>>, <<matrix[3 x 3]>> #> $ U             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ U_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ U_EIOU        <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ r_EIOU        <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ V             <list> <<matrix[7 x 9]>>, <<matrix[4 x 6]>> #> $ y             <list> <<matrix[9 x 1]>>, <<matrix[7 x 1]>> #> $ q             <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ f             <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ g             <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ h             <list> <<matrix[4 x 1]>>, <<matrix[3 x 1]>> #> $ r             <list> <<matrix[4 x 1]>>, <<matrix[3 x 1]>> #> $ W             <list> <<matrix[12 x 7]>>, <<matrix[9 x 4]>> #> $ Z             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ K             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ C             <list> <<matrix[9 x 7]>>, <<matrix[6 x 4]>> #> $ D             <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ A             <list> <<matrix[11 x 12]>>, <<matrix[8 x 9]>> #> $ O             <list> <<matrix[4 x 4]>>, <<matrix[3 x 3]>> #> $ L_pxp         <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp         <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ Z_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ K_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ A_feed        <list> <<matrix[9 x 12]>>, <<matrix[5 x 9]>> #> $ L_pxp_feed    <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp_feed    <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ E_EIOU        <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ e_EIOU        <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ eroi_g_p      <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ eroi_g_i      <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ eroi_g_p_feed <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ eroi_g_i_feed <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> # Let's then extract EROIs in a tidy format: calculated_erois_raw %>%  extract_tidy_industry_erois() %>%  print() #> # A tibble: 22 × 9 #>    Country Method Energy.type Last.stage  Year Type  Boundary  Industry_name     #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr> <chr>     <chr>             #>  1 A       PCM    E           Final       2018 Gross All       Blast furnaces    #>  2 A       PCM    E           Final       2018 Gross All       Coal mines        #>  3 A       PCM    E           Final       2018 Gross All       Coke ovens        #>  4 A       PCM    E           Final       2018 Gross All       Main activity pr… #>  5 A       PCM    E           Final       2018 Gross All       Natural gas extr… #>  6 A       PCM    E           Final       2018 Gross All       Oil extraction    #>  7 A       PCM    E           Final       2018 Gross All       Oil refineries    #>  8 A       PCM    E           Final       2018 Gross Feedstock Blast furnaces    #>  9 A       PCM    E           Final       2018 Gross Feedstock Coal mines        #> 10 A       PCM    E           Final       2018 Gross Feedstock Coke ovens        #> # ℹ 12 more rows #> # ℹ 1 more variable: EROI <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_product_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","title":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","text":"function extracts product level EROIs tidy Input Output matrices, tidy format.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_product_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","text":"","code":"extract_tidy_product_erois(   .tidy_io_mats,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   last_stage = IEATools::iea_cols$last_stage,   year = IEATools::iea_cols$year,   matnames = IEATools::mat_meta_cols$matnames,   matvals = IEATools::mat_meta_cols$matvals,   eroi_g_p = \"eroi_g_p\",   eroi_n_p = \"eroi_n_p\",   eroi_g_p_feed = \"eroi_g_p_feed\",   eroi_n_p_feed = \"eroi_n_p_feed\",   type = \"Type\",   boundary = \"Boundary\",   eroi = \"EROI\",   product = IEATools::iea_cols$product,   colnames = \"colnames\",   rowtypes = \"rowtypes\",   coltypes = \"coltypes\" )"},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_product_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","text":".tidy_io_mats .tidy_io_mats data frame EROIs extracted. country, method, energy_type, last_stage, year, product See IEATools::iea_cols. matnames column name column matrices names. Default IEATools::mat_meta_cols$matnames. matvals column name column reporting matrices values, expanded. Default IEATools::mat_meta_cols$matvals. eroi_g_p name column containing vectors product-level gross EROIs, including energy use feedstock EIOU production. Default \"eroi_g_p\". eroi_n_p name column containing vectors product-level net EROIs, including energy use feedstock EIOU production. Default \"eroi_n_p\". eroi_g_p_feed name column containing vectors product-level gross EROIs, including energy use feedstock production. Default \"eroi_g_p_feed\". eroi_n_p_feed name column containing vectors product-level net EROIs, including energy use feedstock production. Default \"eroi_g_p_feed\". type name EROI type column (.e. gross net EROI). Default \"Type\". boundary name boundary column. Default \"Boundary\". eroi name product EROI column output. Default \"EROI\". colnames name columns expanding matrices. Default \"colnames\". rowtypes name row types expanding matrices. Default \"rowtypes\". coltypes name column types expanding matrices. Default \"coltypes\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_product_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","text":"data frame reporting calculated EROIs tidy format.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_product_erois.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","text":"function can called calculating EROIs Recca::calc_erois() function. type column indicates whether calculated EROI gross net. boundary column indicates whether EROI includes: energy use feedstock production (\"Feedstock\"); energy use feedstock production EIOU production (\"\").","code":""},{"path":"https://earamendia.github.io/EROITools/reference/extract_tidy_product_erois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extracts product level EROIs from tidy Input Output matrices — extract_tidy_product_erois","text":"","code":"# Let's first have a look at the raw data obtained when calculating EROIs: calculated_erois_raw <- ECCTools::tidy_AB_data %>%  IEATools::prep_psut() %>%  Recca::calc_io_mats() %>%  Recca::calc_E_EIOU() %>%  Recca::calc_erois() %>%  dplyr::glimpse() #> Rows: 2 #> Columns: 39 #> $ Country       <chr> \"A\", \"B\" #> $ Method        <chr> \"PCM\", \"PCM\" #> $ Energy.type   <chr> \"E\", \"E\" #> $ Last.stage    <chr> \"Final\", \"Final\" #> $ Year          <dbl> 2018, 2018 #> $ Y             <list> <<matrix[9 x 6]>>, <<matrix[7 x 4]>> #> $ S_units       <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ R             <list> <<matrix[4 x 4]>>, <<matrix[3 x 3]>> #> $ U             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ U_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ U_EIOU        <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ r_EIOU        <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ V             <list> <<matrix[7 x 9]>>, <<matrix[4 x 6]>> #> $ y             <list> <<matrix[9 x 1]>>, <<matrix[7 x 1]>> #> $ q             <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ f             <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ g             <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ h             <list> <<matrix[4 x 1]>>, <<matrix[3 x 1]>> #> $ r             <list> <<matrix[4 x 1]>>, <<matrix[3 x 1]>> #> $ W             <list> <<matrix[12 x 7]>>, <<matrix[9 x 4]>> #> $ Z             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ K             <list> <<matrix[11 x 7]>>, <<matrix[8 x 4]>> #> $ C             <list> <<matrix[9 x 7]>>, <<matrix[6 x 4]>> #> $ D             <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ A             <list> <<matrix[11 x 12]>>, <<matrix[8 x 9]>> #> $ O             <list> <<matrix[4 x 4]>>, <<matrix[3 x 3]>> #> $ L_pxp         <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp         <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ Z_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ K_feed        <list> <<matrix[9 x 7]>>, <<matrix[5 x 4]>> #> $ A_feed        <list> <<matrix[9 x 12]>>, <<matrix[5 x 9]>> #> $ L_pxp_feed    <list> <<matrix[12 x 12]>>, <<matrix[9 x 9]>> #> $ L_ixp_feed    <list> <<matrix[7 x 12]>>, <<matrix[4 x 9]>> #> $ E_EIOU        <list> <<matrix[5 x 7]>>, <<matrix[5 x 4]>> #> $ e_EIOU        <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ eroi_g_p      <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ eroi_g_i      <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> #> $ eroi_g_p_feed <list> <<matrix[12 x 1]>>, <<matrix[9 x 1]>> #> $ eroi_g_i_feed <list> <<matrix[7 x 1]>>, <<matrix[4 x 1]>> # Let's then extract EROIs in a tidy format: calculated_erois_raw %>%  extract_tidy_product_erois() %>%  print() #> # A tibble: 36 × 9 #>    Country Method Energy.type Last.stage  Year Type  Boundary  Product      EROI #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr> <chr>     <chr>       <dbl> #>  1 A       PCM    E           Final       2018 Gross All       Blast furn…  8.95 #>  2 A       PCM    E           Final       2018 Gross All       Coke oven … 19.3  #>  3 A       PCM    E           Final       2018 Gross All       Coking coal 92.5  #>  4 A       PCM    E           Final       2018 Gross All       Crude oil   34.0  #>  5 A       PCM    E           Final       2018 Gross All       Electricity 28.3  #>  6 A       PCM    E           Final       2018 Gross All       Heat        19.9  #>  7 A       PCM    E           Final       2018 Gross All       Kerosene t…  9.07 #>  8 A       PCM    E           Final       2018 Gross All       Motor gaso…  9.07 #>  9 A       PCM    E           Final       2018 Gross All       Natural gas 31.9  #> 10 A       PCM    E           Final       2018 Gross Feedstock Blast furn…  9.57 #> # ℹ 26 more rows"},{"path":"https://earamendia.github.io/EROITools/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://earamendia.github.io/EROITools/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://earamendia.github.io/EROITools/reference/prepare_gma_for_shares.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepares tidy iea data frame with Global Market Assumption for shares calculations — prepare_gma_for_shares","title":"Prepares tidy iea data frame with Global Market Assumption for shares calculations — prepare_gma_for_shares","text":"function prepares tidy iea data frame following Global Market Assumption calculation shares product use within fossil fuel group. , country location removed flow, relocated country column, column product without origin added data frame.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/prepare_gma_for_shares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepares tidy iea data frame with Global Market Assumption for shares calculations — prepare_gma_for_shares","text":"","code":"prepare_gma_for_shares(   .tidy_iea_df,   country = IEATools::iea_cols$country,   flow = IEATools::iea_cols$flow,   product = IEATools::iea_cols$product,   product_without_origin = \"product_without_origin\" )"},{"path":"https://earamendia.github.io/EROITools/reference/prepare_gma_for_shares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepares tidy iea data frame with Global Market Assumption for shares calculations — prepare_gma_for_shares","text":".tidy_iea_df tidy iea data frame Global Market Assumption needs prepared shares calculation. country, flow, product See IEATools::iea_cols. product_without_origin name column containing product names without country production.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/prepare_gma_for_shares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Prepares tidy iea data frame with Global Market Assumption for shares calculations — prepare_gma_for_shares","text":"tidy data frame Global Market Assumption ready shares calculations.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/prepare_gma_for_shares.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Prepares tidy iea data frame with Global Market Assumption for shares calculations — prepare_gma_for_shares","text":"","code":"ECCTools::tidy_AB_data %>%     IEATools::add_psut_matnames() %>%     ECCTools::transform_to_gma() %>%     prepare_gma_for_shares() #> # A tibble: 101 × 13 #>    Country Method Energy.type Last.stage  Year Ledger.side #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       #>  1 A       PCM    E           Final       2018 Supply      #>  2 A       PCM    E           Final       2018 Supply      #>  3 A       PCM    E           Final       2018 Supply      #>  4 A       PCM    E           Final       2018 Supply      #>  5 B       PCM    E           Final       2018 Supply      #>  6 B       PCM    E           Final       2018 Supply      #>  7 B       PCM    E           Final       2018 Supply      #>  8 A       PCM    E           Final       2018 Supply      #>  9 A       PCM    E           Final       2018 Supply      #> 10 A       PCM    E           Final       2018 Supply      #> # ℹ 91 more rows #> # ℹ 7 more variables: Flow.aggregation.point <chr>, Flow <chr>, Product <chr>, #> #   Unit <chr>, E.dot <dbl>, matnames <chr>, product_without_origin <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/push_to_useful_erois.html","id":null,"dir":"Reference","previous_headings":"","what":"Push final stage EROIs to useful stage EROIs — push_to_useful_erois","title":"Push final stage EROIs to useful stage EROIs — push_to_useful_erois","text":"function calculates useful stage EROIs based final stage EROIs average final--useful efficiencies provided energy product. also works efficiencies provided end-use, sector - end-use sector specific useful stage EROIs returned.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/push_to_useful_erois.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Push final stage EROIs to useful stage EROIs — push_to_useful_erois","text":"","code":"push_to_useful_erois(   .tidy_io_erois,   tidy_FU_efficiencies,   country = IEATools::iea_cols$country,   method = IEATools::iea_cols$method,   energy_type = IEATools::iea_cols$energy_type,   year = IEATools::iea_cols$year,   product = IEATools::iea_cols$product,   product_without_origin = \"product_without_origin\",   average_efficiency = \"Average_Efficiency_Col\",   eroi = \"EROI\",   useful_stage_eroi = \"Useful_Stage_EROI\",   eroi_calc_method = c(\"dta\", \"gma\") )"},{"path":"https://earamendia.github.io/EROITools/reference/push_to_useful_erois.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Push final stage EROIs to useful stage EROIs — push_to_useful_erois","text":".tidy_io_erois .tidy_io_erois data frame useful stage EROIs need calculated. tidy_FU_efficiencies tidy data frame containing final--useful efficiencies use calculation useful stage EROIs. country, method, energy_type, year, product See IEATools::iea_cols. product_without_origin name column containing product name excluding product origin. Default \"product_without_origin\". average_efficiency name column containing average final--useful efficiency apply energy product. Default \"Average_Efficiency_Col\". eroi name column containing EROIs. Default \"EROI\". useful_stage_eroi name column containing useful stage EROI values. Default \"Useful_Stage_EROI\". eroi_calc_method calculation method used, either DTA working single country, GMA working multi-regional framework. Default \"dta\".","code":""},{"path":"https://earamendia.github.io/EROITools/reference/push_to_useful_erois.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Push final stage EROIs to useful stage EROIs — push_to_useful_erois","text":".tidy_io_erois data frame useful stage EROIs added.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/push_to_useful_erois.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Push final stage EROIs to useful stage EROIs — push_to_useful_erois","text":"","code":"# Calculating IO matrices tidy_io_AB_dta <- ECCTools::tidy_AB_data %>%  IEATools::prep_psut() %>%  Recca::calc_io_mats(method_q_calculation = \"sum_R_V_cols\") # Calculating tidy IO EROIs tidy_AB_erois_dta <- tidy_io_AB_dta %>%  Recca::calc_E_EIOU() %>%  Recca::calc_erois() %>%  EROITools::extract_tidy_product_erois() %>%  dplyr::mutate(    Eroi.method = \"DTA\"  ) %>%  dplyr::relocate(.data[[\"Eroi.method\"]], .after = Year) #> Warning: Use of .data in tidyselect expressions was deprecated in tidyselect 1.2.0. #> ℹ Please use `all_of(var)` (or `any_of(var)`) instead of `.data[[var]]` # Pushing to tidy useful stage EROIs length_to_use <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   nrow() tidy_FU_efficiencies_dta <- tidy_AB_erois_dta %>%   dplyr::select(Country, Method, Energy.type, Year, Product) %>%   dplyr::distinct() %>%   dplyr::mutate(    Average_Efficiency_Col = seq(0.15, 1, 0.85/(length_to_use-1))  ) # Applying the push_to_useful_erois() function: tidy_useful_erois_dta_with_function <- push_to_useful_erois(  .tidy_io_erois = tidy_AB_erois_dta,  tidy_FU_efficiencies = tidy_FU_efficiencies_dta,  eroi_calc_method = \"dta\" )"},{"path":"https://earamendia.github.io/EROITools/reference/quasi-quote-assign.html","id":null,"dir":"Reference","previous_headings":"","what":"Assignment — :=","title":"Assignment — :=","text":"See rlang:::= details.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/quasi-quote-assign.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Assignment — :=","text":"","code":"x := y"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_data_gma.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy data frame for the AB data with the Global Market Assumption — tidy_AB_data_gma","title":"Tidy data frame for the AB data with the Global Market Assumption — tidy_AB_data_gma","text":"tidy_iea_df containing representation dummy AB Energy Conversion Chain using Global Market Assumption","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_data_gma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy data frame for the AB data with the Global Market Assumption — tidy_AB_data_gma","text":"","code":"tidy_AB_data_gma"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_data_gma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tidy data frame for the AB data with the Global Market Assumption — tidy_AB_data_gma","text":"object class tbl_df (inherits tbl, data.frame) 94 rows 12 columns.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_data_gma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy data frame for the AB data with the Global Market Assumption — tidy_AB_data_gma","text":"","code":"tidy_AB_data_gma #> # A tibble: 94 × 12 #>    Country Method Energy.type Last.stage  Year Ledger.side #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       #>  1 World   PCM    E           Final       2018 Supply      #>  2 World   PCM    E           Final       2018 Supply      #>  3 World   PCM    E           Final       2018 Supply      #>  4 World   PCM    E           Final       2018 Supply      #>  5 World   PCM    E           Final       2018 Supply      #>  6 World   PCM    E           Final       2018 Supply      #>  7 World   PCM    E           Final       2018 Supply      #>  8 World   PCM    E           Final       2018 Supply      #>  9 World   PCM    E           Final       2018 Supply      #> 10 World   PCM    E           Final       2018 Supply      #> # ℹ 84 more rows #> # ℹ 6 more variables: Flow.aggregation.point <chr>, Flow <chr>, Product <chr>, #> #   Unit <chr>, E.dot <dbl>, matnames <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_dta.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy data frame for the AB data with the Domestic Technology Assumption — tidy_AB_dta","title":"Tidy data frame for the AB data with the Domestic Technology Assumption — tidy_AB_dta","text":"tidy_iea_df containing representation dummy AB Energy Conversion Chain using Domestic Technology Assumption","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_dta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy data frame for the AB data with the Domestic Technology Assumption — tidy_AB_dta","text":"","code":"tidy_AB_dta"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_dta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tidy data frame for the AB data with the Domestic Technology Assumption — tidy_AB_dta","text":"object class tbl_df (inherits tbl, data.frame) 99 rows 12 columns.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_dta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy data frame for the AB data with the Domestic Technology Assumption — tidy_AB_dta","text":"","code":"tidy_AB_dta #> # A tibble: 99 × 12 #>    Country Method Energy.type Last.stage  Year Ledger.side #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       #>  1 A       PCM    E           Final       2018 Consumption #>  2 A       PCM    E           Final       2018 Consumption #>  3 A       PCM    E           Final       2018 Consumption #>  4 A       PCM    E           Final       2018 Consumption #>  5 A       PCM    E           Final       2018 Consumption #>  6 A       PCM    E           Final       2018 Consumption #>  7 A       PCM    E           Final       2018 Consumption #>  8 A       PCM    E           Final       2018 Consumption #>  9 A       PCM    E           Final       2018 Consumption #> 10 A       PCM    E           Final       2018 Consumption #> # ℹ 89 more rows #> # ℹ 6 more variables: Flow.aggregation.point <chr>, Flow <chr>, Product <chr>, #> #   Unit <chr>, E.dot <dbl>, matnames <chr>"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_dta.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy data frame containing EROIs for AB using the Domestic Technology Assumption — tidy_AB_erois_dta","title":"Tidy data frame containing EROIs for AB using the Domestic Technology Assumption — tidy_AB_erois_dta","text":"Tidy data frame containing EROI values calculated AB Energy Conversion Chain using Domestic Technology Assumption","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_dta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy data frame containing EROIs for AB using the Domestic Technology Assumption — tidy_AB_erois_dta","text":"","code":"tidy_AB_erois_dta"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_dta.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tidy data frame containing EROIs for AB using the Domestic Technology Assumption — tidy_AB_erois_dta","text":"object class tbl_df (inherits tbl, data.frame) 72 rows 10 columns.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_dta.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy data frame containing EROIs for AB using the Domestic Technology Assumption — tidy_AB_erois_dta","text":"","code":"tidy_AB_erois_dta #> # A tibble: 72 × 10 #>    Country Method Energy.type Last.stage  Year Eroi.method Type  Boundary  #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       <chr> <chr>     #>  1 A       PCM    E           Final       2018 DTA         Gross All       #>  2 A       PCM    E           Final       2018 DTA         Gross All       #>  3 A       PCM    E           Final       2018 DTA         Gross All       #>  4 A       PCM    E           Final       2018 DTA         Gross All       #>  5 A       PCM    E           Final       2018 DTA         Gross All       #>  6 A       PCM    E           Final       2018 DTA         Gross All       #>  7 A       PCM    E           Final       2018 DTA         Gross All       #>  8 A       PCM    E           Final       2018 DTA         Gross All       #>  9 A       PCM    E           Final       2018 DTA         Gross All       #> 10 A       PCM    E           Final       2018 DTA         Gross Feedstock #> # ℹ 62 more rows #> # ℹ 2 more variables: Product <chr>, EROI <dbl>"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_gma.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy data frame containing EROIs for AB using the Global Market Assumption — tidy_AB_erois_gma","title":"Tidy data frame containing EROIs for AB using the Global Market Assumption — tidy_AB_erois_gma","text":"Tidy data frame containing EROI values calculated AB Energy Conversion Chain using Global Market Assumption","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_gma.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy data frame containing EROIs for AB using the Global Market Assumption — tidy_AB_erois_gma","text":"","code":"tidy_AB_erois_gma"},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_gma.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Tidy data frame containing EROIs for AB using the Global Market Assumption — tidy_AB_erois_gma","text":"object class tbl_df (inherits tbl, data.frame) 60 rows 10 columns.","code":""},{"path":"https://earamendia.github.io/EROITools/reference/tidy_AB_erois_gma.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy data frame containing EROIs for AB using the Global Market Assumption — tidy_AB_erois_gma","text":"","code":"tidy_AB_erois_gma #> # A tibble: 60 × 10 #>    Country Method Energy.type Last.stage  Year Eroi.method Type  Boundary #>    <chr>   <chr>  <chr>       <chr>      <dbl> <chr>       <chr> <chr>    #>  1 World   PCM    E           Final       2018 DTA         Gross All      #>  2 World   PCM    E           Final       2018 DTA         Gross All      #>  3 World   PCM    E           Final       2018 DTA         Gross All      #>  4 World   PCM    E           Final       2018 DTA         Gross All      #>  5 World   PCM    E           Final       2018 DTA         Gross All      #>  6 World   PCM    E           Final       2018 DTA         Gross All      #>  7 World   PCM    E           Final       2018 DTA         Gross All      #>  8 World   PCM    E           Final       2018 DTA         Gross All      #>  9 World   PCM    E           Final       2018 DTA         Gross All      #> 10 World   PCM    E           Final       2018 DTA         Gross All      #> # ℹ 50 more rows #> # ℹ 2 more variables: Product <chr>, EROI <dbl>"},{"path":"https://earamendia.github.io/EROITools/news/index.html","id":"eroitools-012-05052023","dir":"Changelog","previous_headings":"","what":"EROITools 0.1.2 (05/05/2023)","title":"EROITools 0.1.2 (05/05/2023)","text":"Compatibility recent tidyverse packages sorted . 562 tests, passing. Test coverage 100%.","code":""},{"path":"https://earamendia.github.io/EROITools/news/index.html","id":"eroitools-011-03022023","dir":"Changelog","previous_headings":"","what":"EROITools 0.1.1 (03/02/2023)","title":"EROITools 0.1.1 (03/02/2023)","text":"First release package. Added NEWS.md file track changes package. 562 tests, passing Test coverage 100%","code":""}]
